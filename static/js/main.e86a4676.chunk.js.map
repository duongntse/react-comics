{"version":3,"sources":["api/apiClient.js","PathCmdToBash.js","FilterComicButtons.js","ComicChapters.js","Footer.js","TopNavbar.js","Countdown.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["defaultUrl","apiClient","loadItems","url","callback","fetch","headers","Accept","then","response","json","myJson","PathCmdToBash","state","convertedPath","pathValue","btnCopyState","copyHandler","e","resInputElm","document","getElementById","focus","select","execCommand","setState","handleChange","value","String","raw","target","isCmdPath","test","isBashPath","includes","convertToBashPath","convertToCmdPath","split","filter","d","join","toLowerCase","pathArr","replace","toUpperCase","className","id","this","onChange","type","placeholder","readOnly","onClick","INIT","COPPIED","React","Component","FilterComicButtons","siteName","retrieveComics","items","reduce","acc","curr","length","push","map","a","base_site_url","props","Col","style","minHeight","fontSize","fontWeight","Button","variant","comic","ind","base_site_name","ComicChapters","sortedItems","activeComicSiteName","filterByComicSiteName","comicSiteName","cloneDeep","sort","b","Date","raw_time","item","onClickHandler","Row","xs","sm","md","lg","Card","border","height","padding","Header","overflow","Title","Link","href","_","truncate","width","Img","src","cover_img","marginLeft","transform","Body","comic_url","comic_name","Subtitle","Moment","fromNow","chapter_number_link","chapter_number_text","prev_chap","Footer","Jumbotron","borderRight","currInd","arr","TopNavbar","Navbar","bg","Brand","alt","buildTimeString","timeFragmentValue","timeFragmentName","Countdown","countText","timeOfFuture","initTimer","year","month","day","hour","minute","second","add","timeOfNow","diff","now","convertCountToDate","daysInMonth","yearString","monthString","dayString","hourString","minuteString","secondString","console","log","runCallbackInterval","setInterval","updateCounterInterval","clearInterval","trim","display","defaultProps","Loader","App","loadingState","LOADING","FINISHED","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e86a4676.chunk.js","sourcesContent":["const defaultUrl = \"items.json\";\r\nexport const apiClient = {\r\n    loadItems: function (url = defaultUrl, callback) {\r\n        fetch(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        })\r\n            .then(function (response) {\r\n                // console.log(response);\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                // console.log(myJson);\r\n                callback(myJson || []);\r\n            });\r\n    },\r\n};\r\nexport default apiClient;\r\n","import React from \"react\";\r\n\r\nexport default class PathCmdToBash extends React.Component {\r\n    state = {\r\n        convertedPath: \"\",\r\n        pathValue: \"\",\r\n        btnCopyState: \"INIT\",\r\n    };\r\n    copyHandler = (e) => {\r\n        const resInputElm = document.getElementById(\"convertedPathInput\");\r\n        // const value = resInputElm.getAttribute(\"value\");\r\n        resInputElm.focus();\r\n        resInputElm.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ btnCopyState: \"COPPIED\" });\r\n        // state: btnCopyState: INIT, COPPIED,\r\n    };\r\n    handleChange = (e) => {\r\n        const value = String.raw`${e.target.value}`;\r\n        this.setState({ pathValue: value });\r\n        // let cmdPath = String.raw`C:\\Users\\DuongNTSE\\Desktop\\vscode_projects\\book-fullstack-react\\exercise-files\\food-lookup-complete`;\r\n        // let bashPath = String.raw`/mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete`;\r\n        const cmdMatcher = /[A-Z]:\\\\((\\w+(\\-)?)?(\\\\)?)+/gi;\r\n        const bashMatcher = /\\/mnt\\/[A-Z]((\\w+(\\-)?)?(\\/)?)+/gi;\r\n        const isCmdPath = cmdMatcher.test(value);\r\n        const isBashPath = bashMatcher.test(value);\r\n\r\n        this.setState({ btnCopyState: \"INIT\" });\r\n\r\n        if (isCmdPath) {\r\n            if (!value.includes(\"/\")) {\r\n                const convertedPath = String.raw`${this.convertToBashPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else if (isBashPath) {\r\n            if (!value.includes(\"\\\\\")) {\r\n                const convertedPath = String.raw`${this.convertToCmdPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else this.setState({ convertedPath: \"\" });\r\n    };\r\n    convertToBashPath = (value) => {\r\n        // let value =\"C:\\UsersDuongNTSEDesktop\\vscode_projects\\book-fullstack-reactexercise-files\\food-lookup-complete\";\r\n        const bashPath = [\r\n            \"/mnt\",\r\n            ...String.raw`${value}`\r\n                .split(/(:|\\\\)/)\r\n                .filter((d) => ![\"\", \":\", `\\\\`].includes(d)),\r\n        ].join(\"/\");\r\n        return bashPath.toLowerCase();\r\n        // this.setState(bashPath);\r\n    };\r\n    convertToCmdPath = (value) => {\r\n        // /mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete\r\n        let pathArr = String.raw`${value}`\r\n            .replace(\"/mnt/\", \"\")\r\n            .split(/(\\/)/)\r\n            .filter((d) => ![\"\", \":\", \"/\"].includes(d));\r\n\r\n        pathArr[0] = pathArr[0].toUpperCase() + \":\";\r\n\r\n        const cmdPath = String.raw`${pathArr.join(\"\\\\\")}`;\r\n        return cmdPath;\r\n        // this.setState(cmdPath);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"ui header my-2\">\r\n                    Convert Path between CMD and BASH\r\n                </h2>\r\n                <div className=\"ui fluid action input\">\r\n                    <div className=\"ui button\">CMD/Bash Path</div>\r\n                    <input\r\n                        id=\"inputPath\"\r\n                        value={this.state.pathValue}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"C:\\Users or /mnt/c/Users\"\r\n                    />\r\n                </div>\r\n                <div className=\"ui fluid action input\">\r\n                    <input\r\n                        id=\"convertedPathInput\"\r\n                        type=\"text\"\r\n                        value={this.state.convertedPath}\r\n                        readOnly\r\n                    />\r\n                    <button\r\n                        onClick={this.copyHandler}\r\n                        className=\"ui teal right labeled icon button\"\r\n                    >\r\n                        <i className=\"copy icon\"></i>\r\n                        {\r\n                            {\r\n                                INIT: \"Copy\",\r\n                                COPPIED: \"Copied\",\r\n                            }[this.state.btnCopyState]\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <hr />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class FilterComicButtons extends Component {\r\n    state = {\r\n        siteName: \"All\",\r\n    };\r\n    retrieveComics = (items) => {\r\n        return items.reduce((acc, curr) => {\r\n            if (acc.length === 0) acc.push(curr);\r\n            else {\r\n                if (\r\n                    !acc\r\n                        .map((a) => a.base_site_url)\r\n                        .includes(curr.base_site_url)\r\n                )\r\n                    acc.push(curr);\r\n            }\r\n            return acc;\r\n        }, []);\r\n    };\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n        const { siteName } = this.state;\r\n        return (\r\n            <Col className=\"mx-2\">\r\n                <span\r\n                    style={{\r\n                        minHeight: `1rem`,\r\n                        fontSize: \"2rem\",\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                >\r\n                    Display:\r\n                </span>\r\n                <Button\r\n                    className={`mx-1 my-1 ${\r\n                        siteName === \"All\" ? \"active\" : \"\"\r\n                    }`}\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                        this.props.onClick(\"All\");\r\n                        this.setState({ siteName: \"All\" });\r\n                    }}\r\n                >\r\n                    All\r\n                </Button>\r\n                {this.retrieveComics(items).map((comic, ind) => (\r\n                    <Button\r\n                        className={`mx-1 my-1 ${\r\n                            siteName === comic.base_site_name ? \"active\" : \"\"\r\n                        }`}\r\n                        key={ind}\r\n                        variant=\"outline-primary\"\r\n                        onClick={() => {\r\n                            this.props.onClick(comic.base_site_name);\r\n                            this.setState({ siteName: comic.base_site_name });\r\n                        }}\r\n                    >\r\n                        {comic.base_site_name}\r\n                    </Button>\r\n                ))}\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterComicButtons;\r\n","import React, { Component } from \"react\";\r\n// import Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n// import Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nimport FilterComicButtons from \"./FilterComicButtons\";\r\n\r\nexport class ComicChapters extends Component {\r\n    state = {\r\n        items: this.props.items,\r\n        sortedItems: [],\r\n        activeComicSiteName: \"All\",\r\n    };\r\n\r\n    filterByComicSiteName = (comicSiteName, items) => {\r\n        if (comicSiteName === \"All\") {\r\n            const sortedItems = cloneDeep(items).sort(\r\n                (a, b) => new Date(b.raw_time) - new Date(a.raw_time)\r\n            );\r\n\r\n            return sortedItems;\r\n        } else {\r\n            const sortedItems = cloneDeep(items)\r\n                .filter((item) => item.base_site_name === comicSiteName)\r\n                .sort((a, b) => new Date(b.raw_time) - new Date(a.raw_time));\r\n\r\n            return sortedItems;\r\n        }\r\n    };\r\n\r\n    onClickHandler = (comicSiteName) => {\r\n        const sortedItems = this.filterByComicSiteName(\r\n            comicSiteName,\r\n            this.state.items\r\n        );\r\n        this.setState({ sortedItems, activeComicSiteName: comicSiteName });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { items } = this.props;\r\n        const sortedItems = this.filterByComicSiteName(\"All\", items);\r\n        this.setState({ items, sortedItems });\r\n    }\r\n\r\n    componentWillReceiveProps({ items }) {\r\n        const sortedItems = this.filterByComicSiteName(\r\n            this.state.activeComicSiteName,\r\n            items\r\n        );\r\n\r\n        this.setState({ items, sortedItems });\r\n    }\r\n\r\n    render() {\r\n        const { items, sortedItems } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Row className=\"text-center py-4\">\r\n                    <FilterComicButtons\r\n                        items={items}\r\n                        onClick={this.onClickHandler}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-md-start\">\r\n                    {sortedItems.map((comic, ind) => {\r\n                        return (\r\n                            <Col xs={12} sm={6} md={4} lg={3} key={ind}>\r\n                                <Card\r\n                                    border=\"info\"\r\n                                    className=\"text-center my-1\"\r\n                                    style={{\r\n                                        // width: \"14rem\",\r\n                                        height: \"470px\",\r\n                                        padding: \"0px\",\r\n                                    }}\r\n                                >\r\n                                    <Card.Header overflow=\"hidden\">\r\n                                        <Card.Title>\r\n                                            <Card.Link\r\n                                                className=\"text-dark\"\r\n                                                href={comic.base_site_url}\r\n                                            >\r\n                                                {_.truncate(\r\n                                                    comic.base_site_name,\r\n                                                    {\r\n                                                        length: 15,\r\n                                                    }\r\n                                                )}\r\n                                            </Card.Link>\r\n                                        </Card.Title>\r\n                                    </Card.Header>\r\n                                    <div\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            height: \"288px\",\r\n                                            overflow: \"hidden\",\r\n                                        }}\r\n                                    >\r\n                                        <Card.Img\r\n                                            variant=\"top\"\r\n                                            src={comic.cover_img}\r\n                                            style={{\r\n                                                width: \"100%\",\r\n                                                height: \"auto\",\r\n                                                // maxHeight: \"250px\",\r\n                                                marginLeft: \"50%\",\r\n                                                transform: \"translateX(-50%)\",\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            <Card.Link\r\n                                                className=\"text-dark\"\r\n                                                href={comic.comic_url}\r\n                                            >\r\n                                                {_.truncate(comic.comic_name, {\r\n                                                    length: 35,\r\n                                                })}\r\n                                            </Card.Link>\r\n                                        </Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                            {Moment(comic.raw_time).fromNow()}\r\n                                        </Card.Subtitle>\r\n                                        <a\r\n                                            className=\"m-1 chapterNumberLink\"\r\n                                            href={comic.chapter_number_link}\r\n                                        >\r\n                                            {comic.chapter_number_text}\r\n                                        </a>\r\n\r\n                                        {comic.prev_chap ? (\r\n                                            <a\r\n                                                className=\"m-1 chapterNumberLink\"\r\n                                                href={\r\n                                                    comic.prev_chap\r\n                                                        .chapter_number_link\r\n                                                }\r\n                                            >\r\n                                                {\r\n                                                    comic.prev_chap\r\n                                                        .chapter_number_text\r\n                                                }\r\n                                            </a>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ComicChapters;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class Footer extends Component {\r\n    state = {\r\n        items: this.props.items,\r\n    };\r\n\r\n    componentWillReceiveProps({ items }) {\r\n        this.setState({ items });\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.state;\r\n\r\n        return (\r\n            <Jumbotron>\r\n                <Row>\r\n                    <Col\r\n                        style={{\r\n                            borderRight: \"1px dashed black\",\r\n                        }}\r\n                    >\r\n                        <h1>More Info: </h1>\r\n                        <p>\r\n                            I get sources from other pages as mentioned on the\r\n                            top of every card. So please access their pages to\r\n                            read more comics.\r\n                        </p>\r\n                        <p>\r\n                            About @copyrights, please contact:{\" \"}\r\n                            <b>\r\n                                <i>Duongntse@gmail.com</i>\r\n                            </b>\r\n                        </p>\r\n                    </Col>\r\n                    <Col>\r\n                        <h1>Comic Sites:</h1>\r\n                        {items\r\n                            .reduce((acc, curr, currInd, arr) => {\r\n                                if (acc.length === 0) acc.push(curr);\r\n                                else {\r\n                                    if (\r\n                                        !acc\r\n                                            .map((a) => a.base_site_url)\r\n                                            .includes(curr.base_site_url)\r\n                                    )\r\n                                        acc.push(curr);\r\n                                }\r\n                                return acc;\r\n                            }, [])\r\n                            .map((comic, ind) => (\r\n                                <Button\r\n                                    className={\"mx-1\"}\r\n                                    key={ind}\r\n                                    target=\"_blank\"\r\n                                    variant=\"outline-primary\"\r\n                                    href={comic.base_site_url}\r\n                                >\r\n                                    {comic.base_site_name}\r\n                                </Button>\r\n                            ))}\r\n                    </Col>\r\n                </Row>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nexport class TopNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src=\"/logorb.svg\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{\" \"}\r\n                    Latest Comic Chapters\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\n\r\nconst manyOrOne = (numb) => (numb > 1 ? \"s\" : \"\");\r\nconst buildTimeString = (timeFragmentValue, timeFragmentName) => `\r\n        ${\r\n            timeFragmentValue >= 0\r\n                ? `${timeFragmentValue}\r\n                  ${timeFragmentName}${manyOrOne(timeFragmentValue)}`\r\n                : \"\"\r\n        }\r\n        `;\r\n\r\nexport class Countdown extends Component {\r\n    state = {\r\n        // count: 0,\r\n        countText: \"\", //\r\n        timeOfFuture: null, // default 10 minutes\r\n        // timeOfNow: null, // default 10 minutes\r\n    };\r\n\r\n    initTimer = ({ year, month, day, hour, minute, second }) => {\r\n        const timeOfFuture = Moment()\r\n            .add(year, \"year\")\r\n            .add(month, \"month\")\r\n            .add(day, \"day\")\r\n            .add(hour, \"hour\")\r\n            .add(minute, \"minute\")\r\n            .add(second, \"second\");\r\n\r\n        const timeOfNow = Moment();\r\n\r\n        const diff = new Date(timeOfFuture) - Date.now();\r\n\r\n        return { timeOfFuture, timeOfNow, diff };\r\n    };\r\n\r\n    convertCountToDate = () => {\r\n        const { timeOfFuture } = this.state;\r\n\r\n        let second = timeOfFuture.second() - Moment().second();\r\n        let minute = timeOfFuture.minute() - Moment().minute();\r\n        let hour = timeOfFuture.hour() - Moment().hour();\r\n        let day = timeOfFuture.day() - Moment().day();\r\n        let month = timeOfFuture.month() - Moment().month();\r\n        let year = timeOfFuture.year() - Moment().year();\r\n\r\n        if (second < 0) {\r\n            second = second + 60;\r\n            minute = minute - 1;\r\n        }\r\n\r\n        if (minute < 0 && hour > 0) {\r\n            minute = minute + 60;\r\n            hour = hour - 1;\r\n        }\r\n        if (hour < 0 && day > 0) {\r\n            hour = hour + 24;\r\n            day = day - 1;\r\n        }\r\n        if (day < 0 && month > 0) {\r\n            day = day + timeOfFuture.daysInMonth();\r\n            month = month - 1;\r\n        }\r\n        if (month < 0 && year > 0) {\r\n            month = month + 1;\r\n            year = year - 1;\r\n        }\r\n\r\n        const yearString =\r\n            this.props.year && this.props.year >= 0\r\n                ? buildTimeString(year, \"year\")\r\n                : \"\";\r\n        const monthString =\r\n            this.props.month && this.props.month >= 0\r\n                ? buildTimeString(month, \"month\")\r\n                : \"\";\r\n        const dayString =\r\n            this.props.day && this.props.day >= 0\r\n                ? buildTimeString(day, \"day\")\r\n                : \"\";\r\n        const hourString =\r\n            this.props.hour && this.props.hour >= 0\r\n                ? buildTimeString(hour, \"hour\")\r\n                : \"\";\r\n        const minuteString =\r\n            this.props.minute && this.props.minute >= 0\r\n                ? buildTimeString(minute, \"minute\")\r\n                : \"\";\r\n        const secondString = buildTimeString(second, \"second\");\r\n\r\n        const countText = `${yearString} ${monthString} ${dayString}  ${hourString}  ${minuteString}  ${secondString}`;\r\n        console.log(\"countText\", countText);\r\n\r\n        return countText;\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { timeOfFuture, diff } = this.initTimer(this.props);\r\n        this.setState({ timeOfFuture });\r\n\r\n        // const count = diff;\r\n        // this.setState({ count });\r\n\r\n        // countdown every any seconds, minutes, hours, or days\r\n        this.runCallbackInterval = setInterval(() => {\r\n            // this.setState({\r\n            //     countText: \"\", //\r\n            //     timeOfFuture: null, // default 10 minutes\r\n            // });\r\n            this.props.callback();\r\n            const { timeOfFuture } = this.initTimer(this.props);\r\n            this.setState({ timeOfFuture });\r\n        }, diff);\r\n\r\n        // update every 1 second\r\n        this.updateCounterInterval = setInterval(() => {\r\n            const countText = this.convertCountToDate();\r\n            this.setState({ countText });\r\n        }, 1000);\r\n    }\r\n    componentDidUpdate() {\r\n        //\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.runCallbackInterval);\r\n        clearInterval(this.updateCounterInterval);\r\n    }\r\n\r\n    render() {\r\n        const { countText } = this.state;\r\n        if (countText.trim().length === 0) return \"\";\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                }}\r\n            >\r\n                <h6>\r\n                    Data will be updated in{\" \"}\r\n                    <span\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5em\",\r\n                        }}\r\n                    >\r\n                        {countText}\r\n                    </span>\r\n                </h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCountdown.propTypes = {\r\n    callback: PropTypes.func,\r\n};\r\n\r\nCountdown.defaultProps = {\r\n    year: 0,\r\n    month: 0,\r\n    day: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n};\r\n\r\nexport default Countdown;\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n    <div className=\"html ui top attached segment\">\r\n        <div className=\"ui segment\" style={{ minHeight: 100 }}>\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui text loader\">Loading</div>\r\n            </div>\r\n            <p></p>\r\n        </div>\r\n    </div>\r\n);\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\n// import _ from \"lodash\";\nimport \"./App.css\";\nimport apiClient from \"./api/apiClient\";\nimport PathCmdToBash from \"./PathCmdToBash\";\nimport ComicChapters from \"./ComicChapters\";\nimport Footer from \"./Footer\";\nimport TopNavbar from \"./TopNavbar\";\nimport Countdown from \"./Countdown\";\nimport Loader from \"./Loader\";\n\nexport class App extends Component {\n    state = {\n        items: [],\n        loadingState: \"LOADING\",\n    };\n\n    loadItems = () => {\n        apiClient.loadItems(\"items.json\", (items) => {\n            this.setState({\n                items,\n                loadingState: \"FINISHED\",\n            });\n        });\n    };\n\n    componentDidMount() {\n        this.setState({\n            loadingState: \"LOADING\",\n        });\n        this.loadItems();\n    }\n    render() {\n        const { items, loadingState } = this.state;\n\n        return (\n            <div className=\"app\">\n                <div className=\"headerApp\">\n                    <TopNavbar />\n                </div>\n                <div className=\"mt-4 position-fixed ml-4\">\n                    <Countdown\n                        hour={0}\n                        minute={0}\n                        second={30}\n                        callback={this.loadItems}\n                    />\n                </div>\n                <div className=\"bodyApp\">\n                    <div className=\"p-4\">\n                        <div className=\"container my-4\">\n                            <PathCmdToBash />\n                        </div>\n                        <div className=\"container my-4\">\n                            {\n                                {\n                                    LOADING: (\n                                        <div className=\"container my-4\">\n                                            <Loader />\n                                        </div>\n                                    ),\n                                    FINISHED: <ComicChapters items={items} />,\n                                }[loadingState]\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footerApp\">\n                    {\n                        {\n                            LOADING: (\n                                <div className=\"container my-4\">\n                                    <Loader />\n                                </div>\n                            ),\n                            FINISHED: <Footer items={items} />,\n                        }[loadingState]\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./semantic-dist/semantic.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}