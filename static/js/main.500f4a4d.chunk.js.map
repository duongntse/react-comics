{"version":3,"sources":["PathCmdToBash.js","App.js","reportWebVitals.js","index.js"],"names":["PathCmdToBash","state","convertedPath","pathValue","btnCopyState","copyHandler","e","resInputElm","document","getElementById","focus","select","execCommand","setState","handleChange","value","String","raw","target","isCmdPath","test","isBashPath","includes","convertToBashPath","convertToCmdPath","split","filter","d","join","toLowerCase","pathArr","replace","toUpperCase","className","id","this","onChange","type","placeholder","readOnly","onClick","INIT","COPPIED","React","Component","ClientApi","comicItems","reduce","acc","curr","currInd","arr","length","push","map","a","base_site_url","ComicChapters","props","useState","comics","setComics","sortedComics","_","cloneDeep","comics_siteNames","Set","c","base_site_name","sort","b","Date","raw_time","Row","style","fontSize","color","Button","variant","comic","ind","siteNames","preventDefault","filteredItems","disabled","href","Col","xs","sm","md","lg","Card","border","height","padding","Header","overflow","Title","Link","truncate","width","Img","src","cover_img","marginLeft","transform","Body","comic_url","comic_name","Subtitle","Moment","fromNow","chapter_number_link","chapter_number_text","prev_chap","App","itemsLoading","items","loadedHour","loadItems","fetch","process","then","r","json","hours","getHours","reloadItemsInterval","setInterval","minutes","getMinutes","clearInterval","Navbar","bg","Brand","alt","LOADING","FINISHED","Jumbotron","borderRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.500f4a4d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class PathCmdToBash extends React.Component {\r\n    state = {\r\n        convertedPath: \"\",\r\n        pathValue: \"\",\r\n        btnCopyState: \"INIT\",\r\n    };\r\n    copyHandler = (e) => {\r\n        const resInputElm = document.getElementById(\"convertedPathInput\");\r\n        // const value = resInputElm.getAttribute(\"value\");\r\n        resInputElm.focus();\r\n        resInputElm.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ btnCopyState: \"COPPIED\" });\r\n        // state: btnCopyState: INIT, COPPIED,\r\n    };\r\n    handleChange = (e) => {\r\n        const value = String.raw`${e.target.value}`;\r\n        this.setState({ pathValue: value });\r\n        // let cmdPath = String.raw`C:\\Users\\DuongNTSE\\Desktop\\vscode_projects\\book-fullstack-react\\exercise-files\\food-lookup-complete`;\r\n        // let bashPath = String.raw`/mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete`;\r\n        const cmdMatcher = /[A-Z]:\\\\((\\w+(\\-)?)?(\\\\)?)+/gi;\r\n        const bashMatcher = /\\/mnt\\/[A-Z]((\\w+(\\-)?)?(\\/)?)+/gi;\r\n        const isCmdPath = cmdMatcher.test(value);\r\n        const isBashPath = bashMatcher.test(value);\r\n\r\n        this.setState({ btnCopyState: \"INIT\" });\r\n\r\n        if (isCmdPath) {\r\n            if (!value.includes(\"/\")) {\r\n                const convertedPath = String.raw`${this.convertToBashPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else if (isBashPath) {\r\n            if (!value.includes(\"\\\\\")) {\r\n                const convertedPath = String.raw`${this.convertToCmdPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else this.setState({ convertedPath: \"\" });\r\n    };\r\n    convertToBashPath = (value) => {\r\n        // let value =\"C:\\UsersDuongNTSEDesktop\\vscode_projects\\book-fullstack-reactexercise-files\\food-lookup-complete\";\r\n        const bashPath = [\r\n            \"/mnt\",\r\n            ...String.raw`${value}`\r\n                .split(/(:|\\\\)/)\r\n                .filter((d) => ![\"\", \":\", `\\\\`].includes(d)),\r\n        ].join(\"/\");\r\n        return bashPath.toLowerCase();\r\n        // this.setState(bashPath);\r\n    };\r\n    convertToCmdPath = (value) => {\r\n        // /mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete\r\n        let pathArr = String.raw`${value}`\r\n            .replace(\"/mnt/\", \"\")\r\n            .split(/(\\/)/)\r\n            .filter((d) => ![\"\", \":\", \"/\"].includes(d));\r\n\r\n        pathArr[0] = pathArr[0].toUpperCase() + \":\";\r\n\r\n        const cmdPath = String.raw`${pathArr.join(\"\\\\\")}`;\r\n        return cmdPath;\r\n        // this.setState(cmdPath);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"ui header my-2\">\r\n                    Convert Path between CMD and BASH\r\n                </h2>\r\n                <div className=\"ui fluid action input\">\r\n                    <div className=\"ui button\">CMD/Bash Path</div>\r\n                    <input\r\n                        id=\"inputPath\"\r\n                        value={this.state.pathValue}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"C:\\Users or /mnt/c/Users\"\r\n                    />\r\n                </div>\r\n                <div className=\"ui fluid action input\">\r\n                    <input\r\n                        id=\"convertedPathInput\"\r\n                        type=\"text\"\r\n                        value={this.state.convertedPath}\r\n                        readOnly\r\n                    />\r\n                    <button\r\n                        onClick={this.copyHandler}\r\n                        className=\"ui teal right labeled icon button\"\r\n                    >\r\n                        <i className=\"copy icon\"></i>\r\n                        {\r\n                            {\r\n                                INIT: \"Copy\",\r\n                                COPPIED: \"Copied\",\r\n                            }[this.state.btnCopyState]\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <hr />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n// import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Navbar from \"react-bootstrap/Navbar\";\n// import Nav from \"react-bootstrap/Nav\";\n// import Form from \"react-bootstrap/Form\";\n// import FormControl from \"react-bootstrap/FormControl\";\n// import items from \"./api/items.json\";\n// import Client from \"./api/Client.js\";\nimport Moment from \"moment\";\nimport _ from \"lodash\";\n\nimport \"./App.css\";\nimport PathCmdToBash from \"./PathCmdToBash\";\n\nconst ClientApi = {\n    retrieveComicsByPageNames: function (comicItems) {\n        return comicItems.reduce((acc, curr, currInd, arr) => {\n            if (acc.length === 0) acc.push(curr);\n            else {\n                if (\n                    !acc\n                        .map((a) => a.base_site_url)\n                        .includes(curr.base_site_url)\n                )\n                    acc.push(curr);\n            }\n            return acc;\n        }, []);\n    },\n};\n\nconst ComicChapters = (props) => {\n    const [comics, setComics] = useState(props.comics || []);\n\n    // items.sort((a, b) => new Date(b.raw_time) - new Date(a.raw_time));\n    const sortedComics = _.cloneDeep(comics);\n\n    const comics_siteNames = [...new Set(comics.map((c) => c.base_site_name))];\n\n    sortedComics.sort((a, b) => new Date(b.raw_time) - new Date(a.raw_time));\n\n    return (\n        <>\n            <Row className=\"justify-content-md-start\">\n                <div className=\"container my-4 text-center\">\n                    <span style={{ fontSize: \"1.5em\", color: \"#333\" }}>\n                        Display:\n                    </span>\n                    <Button\n                        className={`mx-1 my-1 ${\n                            comics_siteNames.length > 1 ? \"active\" : \"\"\n                        }`}\n                        onClick={() => {\n                            setComics(props.comics);\n                        }}\n                        variant=\"outline-primary\"\n                    >\n                        All\n                    </Button>\n                    {ClientApi.retrieveComicsByPageNames(props.comics).map(\n                        function (comic, ind) {\n                            const siteNames = [\n                                ...new Set(comics.map((c) => c.base_site_name)),\n                            ];\n                            return (\n                                <Button\n                                    className={`mx-1 ${\n                                        siteNames.length == 1 &&\n                                        siteNames.includes(comic.base_site_name)\n                                            ? \"active\"\n                                            : \"\"\n                                    }`}\n                                    key={ind}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        const filteredItems = sortedComics.filter(\n                                            (c, ind, arr) =>\n                                                c.base_site_name ===\n                                                comic.base_site_name\n                                        );\n                                        setComics(filteredItems);\n                                    }}\n                                    variant=\"outline-primary\"\n                                    disabled={\n                                        comics\n                                            .map((c) => c.base_site_name)\n                                            .includes(comic.base_site_name)\n                                            ? false\n                                            : true\n                                    }\n                                    href={comic.base_site_url}\n                                >\n                                    {comic.base_site_name}\n                                </Button>\n                            );\n                        }\n                    )}\n                </div>\n            </Row>\n            <Row className=\"justify-content-md-start\">\n                {sortedComics.map((comic, ind) => {\n                    return (\n                        <Col xs={12} sm={6} md={4} lg={2} key={ind}>\n                            <Card\n                                border=\"info\"\n                                className=\"text-center my-1\"\n                                style={{\n                                    // width: \"14rem\",\n                                    height: \"470px\",\n                                    padding: \"0px\",\n                                }}\n                            >\n                                <Card.Header overflow=\"hidden\">\n                                    <Card.Title>\n                                        <Card.Link\n                                            className=\"text-dark\"\n                                            href={comic.base_site_url}\n                                        >\n                                            {_.truncate(comic.base_site_name, {\n                                                length: 15,\n                                            })}\n                                        </Card.Link>\n                                    </Card.Title>\n                                </Card.Header>\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"288px\",\n                                        overflow: \"hidden\",\n                                    }}\n                                >\n                                    <Card.Img\n                                        variant=\"top\"\n                                        src={comic.cover_img}\n                                        style={{\n                                            width: \"100%\",\n                                            height: \"auto\",\n                                            // maxHeight: \"250px\",\n                                            marginLeft: \"50%\",\n                                            transform: \"translateX(-50%)\",\n                                        }}\n                                    />\n                                </div>\n\n                                <Card.Body>\n                                    <Card.Title>\n                                        <Card.Link\n                                            className=\"text-dark\"\n                                            href={comic.comic_url}\n                                        >\n                                            {_.truncate(comic.comic_name, {\n                                                length: 35,\n                                            })}\n                                        </Card.Link>\n                                    </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {Moment(comic.raw_time).fromNow()}\n                                    </Card.Subtitle>\n                                    <Button\n                                        // target=\"_target\"\n                                        className={\"m-1\"}\n                                        variant=\"outline-primary\"\n                                        href={comic.chapter_number_link}\n                                    >\n                                        {comic.chapter_number_text}\n                                    </Button>\n                                    {comic.prev_chap ? (\n                                        <Button\n                                            // target=\"_blank\"\n                                            variant=\"outline-primary\"\n                                            href={\n                                                comic.prev_chap\n                                                    .chapter_number_link\n                                            }\n                                        >\n                                            {\n                                                comic.prev_chap\n                                                    .chapter_number_text\n                                            }\n                                        </Button>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    );\n                })}\n            </Row>\n        </>\n    );\n};\n\nclass App extends React.Component {\n    state = {\n        itemsLoading: \"LOADING\",\n        items: [],\n        loadedHour: 0,\n    };\n\n    loadItems = () => {\n        fetch(`${process.env.PUBLIC_URL}/items.json`)\n            .then((r) => r.json())\n            .then((items) => {\n                this.setState({ items, itemsLoading: \"FINISHED\" });\n            });\n    };\n\n    componentWillMount() {\n        const d = new Date();\n        const hours = d.getHours();\n        this.setState({\n            loadedHour: hours,\n        });\n        this.loadItems();\n    }\n\n    componentDidMount() {\n        const ms = 1;\n        const s = 1000 * ms;\n        // const m = 60 * s;\n        this.reloadItemsInterval = setInterval(() => {\n            const d = new Date();\n            const hours = d.getHours();\n            const minutes = d.getMinutes();\n\n            if (hours >= 6 && hours <= 24) {\n                if (minutes > 3) {\n                    if (this.state.loadedHour !== hours) {\n                        this.setState({\n                            loadedHour: hours,\n                        });\n                        this.loadItems();\n                    }\n                }\n            }\n        }, 1 * s);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.reloadItemsInterval);\n    }\n\n    render() {\n        const items = this.state.items;\n        return (\n            <div className=\"app\">\n                <div className=\"headerApp\">\n                    <Navbar bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand href=\"#home\">\n                            <img\n                                alt=\"\"\n                                src={process.env.PUBLIC_URL + \"/logorb.svg\"}\n                                width=\"30\"\n                                height=\"30\"\n                                className=\"d-inline-block align-top\"\n                            />{\" \"}\n                            Latest Comic Chapters\n                        </Navbar.Brand>\n                    </Navbar>\n                </div>\n                <div className=\"bodyApp\">\n                    <div className=\"container my-4\">\n                        <PathCmdToBash />\n                    </div>\n                    <div className=\"p-4\">\n                        {\n                            {\n                                LOADING: <h1>\"Loading...\"</h1>,\n                                FINISHED: <ComicChapters comics={items} />,\n                            }[this.state.itemsLoading]\n                        }\n                    </div>\n                </div>\n                <div className=\"footerApp\">\n                    <Jumbotron>\n                        <Row>\n                            <Col\n                                style={{\n                                    borderRight: \"1px dashed black\",\n                                }}\n                            >\n                                <h1>More Info: </h1>\n                                <p>\n                                    I get sources from other pages as mentioned\n                                    on the top of every card. So please access\n                                    their pages to read more comics.\n                                </p>\n                                <p>\n                                    About @copyrights, please contact:{\" \"}\n                                    <b>\n                                        <i>Duongntse@gmail.com</i>\n                                    </b>\n                                </p>\n                            </Col>\n                            <Col>\n                                <h1>Comic Sites:</h1>\n                                {\n                                    {\n                                        LOADING: <h1>\"Loading...\"</h1>,\n                                        FINISHED: ClientApi.retrieveComicsByPageNames(\n                                            items\n                                        ).map((comic, ind) => (\n                                            <Button\n                                                className={\"mx-1\"}\n                                                key={ind}\n                                                // target=\"_blank\"\n                                                variant=\"outline-primary\"\n                                                href={comic.base_site_url}\n                                            >\n                                                {comic.base_site_name}\n                                            </Button>\n                                        )),\n                                    }[this.state.itemsLoading]\n                                }\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./semantic-dist/semantic.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}