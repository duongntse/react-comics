{"version":3,"sources":["PathCmdToBash.js","api/apiClient.js","api/helper.js","FilterComicButtons.js","Countdown.js","Loader.js","ComicCard.js","ComicChapters.js","BetaFeature.js","Footer.js","TopNavbar.js","NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["PathCmdToBash","state","convertedPath","pathValue","btnCopyState","copyHandler","e","resInputElm","document","getElementById","focus","select","execCommand","setState","handleChange","value","String","raw","target","isCmdPath","test","isBashPath","includes","convertToBashPath","convertToCmdPath","split","filter","d","join","toLowerCase","pathArr","replace","toUpperCase","className","id","this","onChange","type","placeholder","readOnly","onClick","INIT","COPPIED","React","Component","client","items","betaItems","loadStatus","Promise","resolve","reject","fetch","headers","Accept","then","checkStatus","parseJson","myJson","error","response","status","Error","statusText","console","log","json","helper","chooseNewestChaptersVersion","main","duck","rock","fox","panda","filtered_versions","version","length","sort","a","b","a_latestChapter","Date","time","b_latestChapter","sortBetaItems","a_newestChapter","main_chapters","duck_chapters","rock_chapters","fox_chapters","panda_chapters","b_newestChapter","FilterComicButtons","siteName","retrieveComics","reduce","acc","curr","push","map","website_url","props","Col","style","minHeight","fontSize","fontWeight","Button","variant","comic","ind","website_name","require","buildTimeString","timeFragmentValue","timeFragmentName","Countdown","countText","timeOfFuture","initTimer","year","month","day","hour","minute","second","moment","add","timeOfNow","diff","now","oldObsoleteConvertCountToDate","daysInMonth","yearString","monthString","dayString","hourString","minuteString","secondString","preciseDiffOfFutureAndNow","m1","format","m2","preciseDiff","runCallbackInterval","setInterval","callback","updateCounterInterval","clearInterval","trim","display","defaultProps","Loader","BootstrapTableChapters","prevChapters","scope","chapter","index","href","link","_","truncate","text","Moment","fromNow","ComicCard","cover_img","comic_name","comic_url","chapters","latestChapterUI","prevChapterUIs","data-bs-toggle","aria-expanded","aria-labelledby","slice","src","height","ComicChapters","filteredSortedItems","activeComicSiteName","loadingState","loadItems","filteredItems","filterByComicSiteName","catch","comicSiteName","cloneDeep","item","onClickHandler","Row","xs","sm","md","lg","BetaFeature","Footer","Jumbotron","borderRight","TopNavbar","Navbar","bg","Brand","alt","width","to","NoMatch","location","pathname","App","path","component","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.347c15f2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class PathCmdToBash extends React.Component {\r\n    state = {\r\n        convertedPath: \"\",\r\n        pathValue: \"\",\r\n        btnCopyState: \"INIT\",\r\n    };\r\n    copyHandler = (e) => {\r\n        const resInputElm = document.getElementById(\"convertedPathInput\");\r\n        // const value = resInputElm.getAttribute(\"value\");\r\n        resInputElm.focus();\r\n        resInputElm.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ btnCopyState: \"COPPIED\" });\r\n        // state: btnCopyState: INIT, COPPIED,\r\n    };\r\n    handleChange = (e) => {\r\n        const value = String.raw`${e.target.value}`;\r\n        this.setState({ pathValue: value });\r\n        // let cmdPath = String.raw`C:\\Users\\DuongNTSE\\Desktop\\vscode_projects\\book-fullstack-react\\exercise-files\\food-lookup-complete`;\r\n        // let bashPath = String.raw`/mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete`;\r\n        const cmdMatcher = /[A-Z]:\\\\((\\w+(\\-)?)?(\\\\)?)+/gi;\r\n        const bashMatcher = /\\/mnt\\/[A-Z]((\\w+(\\-)?)?(\\/)?)+/gi;\r\n        const isCmdPath = cmdMatcher.test(value);\r\n        const isBashPath = bashMatcher.test(value);\r\n\r\n        this.setState({ btnCopyState: \"INIT\" });\r\n\r\n        if (isCmdPath) {\r\n            if (!value.includes(\"/\")) {\r\n                const convertedPath = String.raw`${this.convertToBashPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else if (isBashPath) {\r\n            if (!value.includes(\"\\\\\")) {\r\n                const convertedPath = String.raw`${this.convertToCmdPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else this.setState({ convertedPath: \"\" });\r\n    };\r\n    convertToBashPath = (value) => {\r\n        // let value =\"C:\\UsersDuongNTSEDesktop\\vscode_projects\\book-fullstack-reactexercise-files\\food-lookup-complete\";\r\n        const bashPath = [\r\n            \"/mnt\",\r\n            ...String.raw`${value}`\r\n                .split(/(:|\\\\)/)\r\n                .filter((d) => ![\"\", \":\", `\\\\`].includes(d)),\r\n        ].join(\"/\");\r\n        return bashPath.toLowerCase();\r\n        // this.setState(bashPath);\r\n    };\r\n    convertToCmdPath = (value) => {\r\n        // /mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete\r\n        let pathArr = String.raw`${value}`\r\n            .replace(\"/mnt/\", \"\")\r\n            .split(/(\\/)/)\r\n            .filter((d) => ![\"\", \":\", \"/\"].includes(d));\r\n\r\n        pathArr[0] = pathArr[0].toUpperCase() + \":\";\r\n\r\n        const cmdPath = String.raw`${pathArr.join(\"\\\\\")}`;\r\n        return cmdPath;\r\n        // this.setState(cmdPath);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"ui header my-2\">\r\n                    Convert Path between CMD and BASH\r\n                </h2>\r\n                <div className=\"ui fluid action input\">\r\n                    <div className=\"ui button\">CMD/Bash Path</div>\r\n                    <input\r\n                        id=\"inputPath\"\r\n                        value={this.state.pathValue}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"C:\\Users or /mnt/c/Users\"\r\n                    />\r\n                </div>\r\n                <div className=\"ui fluid action input\">\r\n                    <input\r\n                        id=\"convertedPathInput\"\r\n                        type=\"text\"\r\n                        value={this.state.convertedPath}\r\n                        readOnly\r\n                    />\r\n                    <button\r\n                        onClick={this.copyHandler}\r\n                        className=\"ui teal right labeled icon button\"\r\n                    >\r\n                        <i className=\"copy icon\"></i>\r\n                        {\r\n                            {\r\n                                INIT: \"Copy\",\r\n                                COPPIED: \"Copied\",\r\n                            }[this.state.btnCopyState]\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <hr />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","/* eslint-disable prefer-template */\r\n/* eslint-disable import/prefer-default-export */\r\nimport fetch from \"isomorphic-fetch\";\r\nclass Client {\r\n    constructor() {\r\n        this.items = [];\r\n        this.betaItems = [];\r\n        this.loadStatus = \"INIT\"; // INIT, IN_PROGRESS, COMPLETED\r\n    }\r\n\r\n    loadItems() {\r\n        this.loadStatus = \"IN_PROGRESS\";\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                fetch(\"items.json\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Accept: \"application/json\",\r\n                    },\r\n                })\r\n                    .then(this.checkStatus)\r\n                    .then(this.parseJson)\r\n                    .then((myJson) => {\r\n                        this.loadStatus = \"COMPLETED\";\r\n                        this.betaItems = myJson;\r\n                        resolve(myJson);\r\n                    });\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    checkStatus(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            const error = new Error(`HTTP Error ${response.statusText}`);\r\n            error.status = response.statusText;\r\n            error.response = response;\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    parseJson(response) {\r\n        return response.json();\r\n    }\r\n}\r\n\r\nexport const client = new Client();\r\n","export const helper = {\r\n    chooseNewestChaptersVersion: function (main, duck, rock, fox, panda) {\r\n        const filtered_versions = [main, duck, rock, fox, panda].filter(\r\n            (version) => version.length > 0\r\n        );\r\n\r\n        if (filtered_versions.length > 1) {\r\n            return filtered_versions.sort((a, b) => {\r\n                const a_latestChapter = [...a].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                const b_latestChapter = [...b].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                return (\r\n                    new Date(b_latestChapter.time) -\r\n                    new Date(a_latestChapter.time)\r\n                );\r\n            })[0];\r\n        } else {\r\n            return filtered_versions[0];\r\n        }\r\n    },\r\n    sortBetaItems: function (betaItems) {\r\n        const cloneBetaItems = [...betaItems];\r\n        return cloneBetaItems.sort((a, b) => {\r\n            // a :main_chapters, duck_chapters,rock_chapters,fox_chapters, panda_chapters\r\n            // b :main_chapters, duck_chapters,rock_chapters,fox_chapters, panda_chapters\r\n            const a_newestChapter = this.chooseNewestChaptersVersion(\r\n                a.main_chapters,\r\n                a.duck_chapters,\r\n                a.rock_chapters,\r\n                a.fox_chapters,\r\n                a.panda_chapters\r\n            )[0];\r\n            const b_newestChapter = this.chooseNewestChaptersVersion(\r\n                b.main_chapters,\r\n                b.duck_chapters,\r\n                b.rock_chapters,\r\n                b.fox_chapters,\r\n                b.panda_chapters\r\n            )[0];\r\n\r\n            return (\r\n                new Date(b_newestChapter.time) - new Date(a_newestChapter.time)\r\n            );\r\n        });\r\n    },\r\n};\r\n\r\nexport default helper;\r\n","import React, { Component } from \"react\";\r\n// import Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class FilterComicButtons extends Component {\r\n    state = {\r\n        siteName: \"All\",\r\n    };\r\n    retrieveComics = (items) => {\r\n        return items.reduce((acc, curr) => {\r\n            if (acc.length === 0) acc.push(curr);\r\n            else {\r\n                if (!acc.map((a) => a.website_url).includes(curr.website_url))\r\n                    acc.push(curr);\r\n            }\r\n            return acc;\r\n        }, []);\r\n    };\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n        const { siteName } = this.state;\r\n        return (\r\n            <Col className=\"mx-2\">\r\n                <span\r\n                    style={{\r\n                        minHeight: `1rem`,\r\n                        fontSize: \"2rem\",\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                >\r\n                    Display:\r\n                </span>\r\n                <Button\r\n                    className={`mx-1 my-1 ${\r\n                        siteName === \"All\" ? \"active\" : \"\"\r\n                    }`}\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                        this.props.onClick(\"All\");\r\n                        this.setState({ siteName: \"All\" });\r\n                    }}\r\n                >\r\n                    All\r\n                </Button>\r\n                {this.retrieveComics(items).map((comic, ind) => (\r\n                    <Button\r\n                        className={`mx-1 my-1 ${\r\n                            siteName === comic.website_name ? \"active\" : \"\"\r\n                        }`}\r\n                        key={ind}\r\n                        variant=\"outline-primary\"\r\n                        onClick={() => {\r\n                            this.props.onClick(comic.website_name);\r\n                            this.setState({ siteName: comic.website_name });\r\n                        }}\r\n                    >\r\n                        {comic.website_name}\r\n                    </Button>\r\n                ))}\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterComicButtons;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nrequire(\"twix\");\r\nrequire(\"moment-precise-range-plugin\");\r\n\r\nconst manyOrOne = (numb) => (numb > 1 ? \"s\" : \"\");\r\nconst buildTimeString = (timeFragmentValue, timeFragmentName) => `\r\n        ${\r\n            timeFragmentValue >= 0\r\n                ? `${timeFragmentValue}\r\n                  ${timeFragmentName}${manyOrOne(timeFragmentValue)}`\r\n                : \"\"\r\n        }\r\n        `;\r\n\r\nexport class Countdown extends Component {\r\n    state = {\r\n        // count: 0,\r\n        countText: \"\", //\r\n        timeOfFuture: null, // default 10 minutes\r\n        // timeOfNow: null, // default 10 minutes\r\n    };\r\n\r\n    initTimer = ({ year, month, day, hour, minute, second }) => {\r\n        const timeOfFuture = moment()\r\n            .add(year, \"year\")\r\n            .add(month, \"month\")\r\n            .add(day, \"day\")\r\n            .add(hour, \"hour\")\r\n            .add(minute, \"minute\")\r\n            .add(second, \"second\");\r\n\r\n        const timeOfNow = moment();\r\n\r\n        const diff = new Date(timeOfFuture) - Date.now();\r\n\r\n        return { timeOfFuture, timeOfNow, diff };\r\n    };\r\n\r\n    oldObsoleteConvertCountToDate = () => {\r\n        const { timeOfFuture } = this.state;\r\n\r\n        let second = timeOfFuture.second() - moment().second();\r\n        let minute = timeOfFuture.minute() - moment().minute();\r\n        let hour = timeOfFuture.hour() - moment().hour();\r\n        let day = timeOfFuture.day() - moment().day();\r\n        let month = timeOfFuture.month() - moment().month();\r\n        let year = timeOfFuture.year() - moment().year();\r\n\r\n        if (second < 0) {\r\n            second = second + 60;\r\n            minute = minute - 1;\r\n        }\r\n\r\n        if (minute < 0 && hour > 0) {\r\n            minute = minute + 60;\r\n            hour = hour - 1;\r\n        }\r\n        if (hour < 0 && day > 0) {\r\n            hour = hour + 24;\r\n            day = day - 1;\r\n        }\r\n        if (day < 0 && month > 0) {\r\n            day = day + timeOfFuture.daysInMonth();\r\n            month = month - 1;\r\n        }\r\n        if (month < 0 && year > 0) {\r\n            month = month + 1;\r\n            year = year - 1;\r\n        }\r\n\r\n        const yearString =\r\n            this.props.year && this.props.year >= 0\r\n                ? buildTimeString(year, \"year\")\r\n                : \"\";\r\n        const monthString =\r\n            this.props.month && this.props.month >= 0\r\n                ? buildTimeString(month, \"month\")\r\n                : \"\";\r\n        const dayString =\r\n            this.props.day && this.props.day >= 0\r\n                ? buildTimeString(day, \"day\")\r\n                : \"\";\r\n        const hourString =\r\n            this.props.hour && this.props.hour >= 0\r\n                ? buildTimeString(hour, \"hour\")\r\n                : \"\";\r\n        const minuteString =\r\n            this.props.minute && this.props.minute >= 0\r\n                ? buildTimeString(minute, \"minute\")\r\n                : \"\";\r\n        const secondString = buildTimeString(second, \"second\");\r\n\r\n        const countText = `${yearString} ${monthString} ${dayString}  ${hourString}  ${minuteString}  ${secondString}`;\r\n\r\n        return countText;\r\n    };\r\n\r\n    preciseDiffOfFutureAndNow = () => {\r\n        const { timeOfFuture } = this.state;\r\n\r\n        var m1 = timeOfFuture.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        var m2 = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n        var diff = moment.preciseDiff(m1, m2);\r\n        // console.log(\r\n        //     moment(\"1982-01-25T09:30\").twix(\"1982-01-25T13:30\").format()\r\n        // );\r\n        return diff;\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { timeOfFuture, diff } = this.initTimer(this.props);\r\n        this.setState({ timeOfFuture });\r\n\r\n        // countdown every any seconds, minutes, hours, or days\r\n        this.runCallbackInterval = setInterval(() => {\r\n            this.props.callback();\r\n            const { timeOfFuture } = this.initTimer(this.props);\r\n            this.setState({ timeOfFuture });\r\n        }, diff);\r\n\r\n        // update every 1 second\r\n        this.updateCounterInterval = setInterval(() => {\r\n            const countText = this.preciseDiffOfFutureAndNow();\r\n            this.setState({ countText });\r\n        }, 1000);\r\n    }\r\n    componentDidUpdate() {\r\n        //\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.runCallbackInterval);\r\n        clearInterval(this.updateCounterInterval);\r\n    }\r\n\r\n    render() {\r\n        const { countText } = this.state;\r\n        if (countText.trim().length === 0) return \"\";\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                }}\r\n            >\r\n                <h6>\r\n                    Data will be updated in{\" \"}\r\n                    <span\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5em\",\r\n                        }}\r\n                    >\r\n                        {countText}\r\n                    </span>\r\n                </h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCountdown.propTypes = {\r\n    callback: PropTypes.func,\r\n};\r\n\r\nCountdown.defaultProps = {\r\n    year: 0,\r\n    month: 0,\r\n    day: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n};\r\n\r\nexport default Countdown;\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n    <div className=\"html ui top attached segment\">\r\n        <div className=\"ui segment\" style={{ minHeight: 100 }}>\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui text loader\">Loading</div>\r\n            </div>\r\n            <p></p>\r\n        </div>\r\n    </div>\r\n);\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport Moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nconst BootstrapTableChapters = ({ prevChapters }) => (\r\n    <table className=\"table table-light table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">\r\n                    <div className=\"item content text-center\">Chapter</div>\r\n                </th>\r\n                <th scope=\"col\">\r\n                    <div className=\"item content text-center\">Date</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {prevChapters.map((chapter, index) => (\r\n                <tr key={index}>\r\n                    <td>\r\n                        <a className=\"chapterNumberLink\" href={chapter.link}>\r\n                            {_.truncate(chapter.text, {\r\n                                length: 20,\r\n                            })}\r\n                        </a>\r\n                    </td>\r\n                    <td>\r\n                        {chapter.time ? (\r\n                            <span className=\"\">\r\n                                {/* <div className=\"item content text-center\"> </div> */}\r\n                                {Moment(chapter.time).fromNow()}\r\n                            </span>\r\n                        ) : (\r\n                            \"not available\"\r\n                        )}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\n/*\r\n<ComicCard\r\n    website_name={website_name}\r\n    website_url={website_url}\r\n    cover_img={cover_img}\r\n    comic_name={comic_name}\r\n    comic_url={comic_url}\r\n    main_chapters,\r\n    duck_chapters,\r\n    rock_chapters,\r\n    fox_chapters,\r\n    panda_chapters,\r\n/>;\r\n*/\r\nexport const ComicCard = (props) => {\r\n    const {\r\n        website_name,\r\n        website_url,\r\n        cover_img,\r\n        comic_name,\r\n        comic_url,\r\n        main_chapters,\r\n        duck_chapters,\r\n        rock_chapters,\r\n        fox_chapters,\r\n        panda_chapters,\r\n    } = props;\r\n\r\n    const chooseNewestChaptersVersion = (main, duck, rock, fox, panda) => {\r\n        const filtered_versions = [main, duck, rock, fox, panda].filter(\r\n            (version) => version.length > 0\r\n        );\r\n\r\n        if (filtered_versions.length > 1) {\r\n            return filtered_versions.sort((a, b) => {\r\n                const a_latestChapter = [...a].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                const b_latestChapter = [...b].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                return (\r\n                    new Date(b_latestChapter.time) -\r\n                    new Date(a_latestChapter.time)\r\n                );\r\n            })[0];\r\n        } else {\r\n            return filtered_versions[0];\r\n        }\r\n    };\r\n\r\n    const chapters = chooseNewestChaptersVersion(\r\n        main_chapters,\r\n        duck_chapters,\r\n        rock_chapters,\r\n        fox_chapters,\r\n        panda_chapters\r\n    );\r\n\r\n    const latestChapterUI = (\r\n        <div className=\"text\">\r\n            <div className=\"extra content\">\r\n                <span className=\"right floated mr-1\">\r\n                    {chapters[0].time ? Moment(chapters[0].time).fromNow() : \"\"}\r\n                </span>\r\n                <span>\r\n                    <a\r\n                        className=\"m-1 chapterNumberLink\"\r\n                        href={chapters[0].link}\r\n                    >\r\n                        {_.truncate(chapters[0].text, {\r\n                            length: 20,\r\n                        })}\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const prevChapterUIs = (\r\n        <div className=\"dropdown d-grid gap-2\">\r\n            <button\r\n                className=\"btn btn-secondary dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Previous Chapters\r\n            </button>\r\n            <ul\r\n                className=\"dropdown-menu w-100\"\r\n                aria-labelledby=\"dropdownMenuButton\"\r\n            >\r\n                <BootstrapTableChapters prevChapters={chapters.slice(1)} />\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"ui link cards my-1\">\r\n            <div className=\"card\">\r\n                <div className=\"image\">\r\n                    <img src={cover_img} style={{ height: \"410px\" }} />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"header\">\r\n                        <a className=\"m-1\" href={comic_url}>\r\n                            {comic_name}\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        <a href={website_url}>\r\n                            {_.truncate(website_name, {\r\n                                length: 15,\r\n                            })}\r\n                        </a>\r\n                    </div>\r\n                    {/* <div className=\"description\">\r\n                            Matthew is an interior designer living in New York.\r\n                        </div> */}\r\n                </div>\r\n                {latestChapterUI}\r\n                <br />\r\n                {prevChapterUIs}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComicCard;\r\n","import React, { Component } from \"react\";\r\n// import Container from \"react-bootstrap/Container\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Card from \"react-bootstrap/Card\";\r\n// import Moment from \"moment\";\r\n// import _ from \"lodash\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nimport { client } from \"./api/apiClient\";\r\nimport { helper } from \"./api/helper\";\r\n\r\nimport FilterComicButtons from \"./FilterComicButtons\";\r\nimport Countdown from \"./Countdown\";\r\nimport Loader from \"./Loader\";\r\nimport ComicCard from \"./ComicCard\";\r\n\r\nexport class ComicChapters extends Component {\r\n    state = {\r\n        items: [],\r\n        filteredSortedItems: [],\r\n        activeComicSiteName: \"All\",\r\n        loadingState: \"LOADING\",\r\n    };\r\n\r\n    loadItems = () => {\r\n        const { activeComicSiteName } = this.state;\r\n\r\n        client\r\n            .loadItems()\r\n            .then((items) => {\r\n                const filteredItems = this.filterByComicSiteName(\r\n                    activeComicSiteName,\r\n                    items\r\n                );\r\n                const filteredSortedItems = helper.sortBetaItems(filteredItems);\r\n\r\n                this.setState({\r\n                    items,\r\n                    filteredSortedItems,\r\n                    loadingState: \"FINISHED\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({\r\n                    items: [],\r\n                    filteredSortedItems: [],\r\n                    activeComicSiteName: \"All\",\r\n                    loadingState: \"FINISHED\",\r\n                });\r\n            });\r\n    };\r\n\r\n    filterByComicSiteName = (comicSiteName, items) => {\r\n        if (comicSiteName === \"All\") {\r\n            const filteredItems = cloneDeep(items);\r\n            return filteredItems;\r\n        } else {\r\n            const filteredItems = cloneDeep(items).filter(\r\n                (item) => item.website_name === comicSiteName\r\n            );\r\n            return filteredItems;\r\n        }\r\n    };\r\n\r\n    onClickHandler = (comicSiteName) => {\r\n        const filteredItems = this.filterByComicSiteName(\r\n            comicSiteName,\r\n            this.state.items\r\n        );\r\n        const filteredSortedItems = helper.sortBetaItems(filteredItems);\r\n\r\n        this.setState({\r\n            filteredSortedItems,\r\n            activeComicSiteName: comicSiteName,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loadingState: \"LOADING\",\r\n        });\r\n        this.loadItems();\r\n    }\r\n\r\n    render() {\r\n        const { items, filteredSortedItems, loadingState } = this.state;\r\n        if (loadingState === \"LOADING\")\r\n            return (\r\n                <div className=\"container my-4\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        return (\r\n            <>\r\n                <div className=\"mt-4 ml-4\">\r\n                    <Countdown\r\n                        hour={0}\r\n                        minute={1}\r\n                        second={30}\r\n                        callback={this.loadItems}\r\n                    />\r\n                </div>\r\n                <Row className=\"text-center py-4\">\r\n                    <FilterComicButtons\r\n                        items={items}\r\n                        onClick={this.onClickHandler}\r\n                    />\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-md-start\">\r\n                    {filteredSortedItems.map((comic, ind) => {\r\n                        return (\r\n                            <Col xs={12} sm={6} md={4} lg={3} key={ind}>\r\n                                <ComicCard {...comic} />\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ComicChapters;\r\n","export const BetaFeature = () => (\r\n    <div className=\"container-fluid\">\r\n        <h1>Beta Feature</h1>\r\n    </div>\r\n);\r\nexport default BetaFeature;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { client } from \"./api/apiClient\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport class Footer extends Component {\r\n    state = {\r\n        items: [],\r\n        loadingState: \"LOADING\",\r\n    };\r\n\r\n    loadItems = () => {\r\n        client.loadItems().then((items) => {\r\n            this.setState({ items, loadingState: \"FINISHED\" });\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loadingState: \"LOADING\",\r\n        });\r\n        this.loadItems();\r\n    }\r\n\r\n    render() {\r\n        const { items, loadingState } = this.state;\r\n        if (loadingState === \"LOADING\")\r\n            return (\r\n                <div className=\"container my-4\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <Jumbotron>\r\n                <Row>\r\n                    <Col\r\n                        style={{\r\n                            borderRight: \"1px dashed black\",\r\n                        }}\r\n                    >\r\n                        <h1>More Info: </h1>\r\n                        <p>\r\n                            I get sources from other pages as mentioned on the\r\n                            top of every card. So please access their pages to\r\n                            read more comics.\r\n                        </p>\r\n                        <p>\r\n                            About @copyrights, please contact:{\" \"}\r\n                            <b>\r\n                                <i>Duongntse@gmail.com</i>\r\n                            </b>\r\n                        </p>\r\n                    </Col>\r\n                    <Col>\r\n                        <h1>Comic Sites:</h1>\r\n                        {items\r\n                            .reduce((acc, curr) => {\r\n                                if (acc.length === 0) acc.push(curr);\r\n                                else {\r\n                                    if (\r\n                                        !acc\r\n                                            .map((a) => a.website_url)\r\n                                            .includes(curr.website_url)\r\n                                    )\r\n                                        acc.push(curr);\r\n                                }\r\n                                return acc;\r\n                            }, [])\r\n                            .map((comic, ind) => (\r\n                                <Button\r\n                                    className={\"mx-1\"}\r\n                                    key={ind}\r\n                                    target=\"_blank\"\r\n                                    variant=\"outline-primary\"\r\n                                    href={comic.website_url}\r\n                                >\r\n                                    {comic.website_name}\r\n                                </Button>\r\n                            ))}\r\n                    </Col>\r\n                </Row>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class TopNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src=\"/harrygold_logo_ver4.svg\"\r\n                        width=\"40\"\r\n                        height=\"40\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{\" \"}\r\n                    {/*  */}\r\n                </Navbar.Brand>\r\n                <Link className=\"ui item\" to=\"/comics_alpha\">\r\n                    <Button className={\"mx-1\"} variant=\"outline-light\">\r\n                        {\"Alpha Comics\"}\r\n                    </Button>\r\n                </Link>\r\n                <Link className=\"ui item\" to=\"/beta_feature\">\r\n                    <Button className={\"mx-1\"} variant=\"outline-light\">\r\n                        {\"Beta Feature\"}\r\n                    </Button>\r\n                </Link>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavbar;\r\n","export const NoMatch = ({ location }) => (\r\n    <div className=\"ui inverted red raised very padded text container segment\">\r\n        <strong>Error!</strong> No route found matching:\r\n        <div className=\"ui inverted black segment\">\r\n            <code>{location.pathname}</code>\r\n        </div>\r\n    </div>\r\n);\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n// import _ from \"lodash\";\nimport \"./App.css\";\n\nimport PathCmdToBash from \"./PathCmdToBash\";\nimport ComicChapters from \"./ComicChapters\";\nimport BetaFeature from \"./BetaFeature\";\nimport Footer from \"./Footer\";\nimport TopNavbar from \"./TopNavbar\";\nimport NoMatch from \"./NoMatch\";\n\nexport class App extends Component {\n    componentDidMount() {}\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"headerApp\">\n                    <TopNavbar />\n                </div>\n\n                <div className=\"bodyApp\">\n                    <div className=\"p-4\">\n                        <div className=\"container my-4\">\n                            <PathCmdToBash />\n                        </div>\n                        <div className=\"container my-4\">\n                            <Switch>\n                                <Route\n                                    path=\"/comics_alpha\"\n                                    component={ComicChapters}\n                                />\n                                <Route\n                                    path=\"/beta_feature\"\n                                    component={BetaFeature}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => (\n                                        <Redirect to=\"/comics_alpha\" />\n                                    )}\n                                />\n                                <Route component={NoMatch} />\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footerApp\">\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./semantic-dist/semantic.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// import moment from \"moment\";\n// import twix from \"twix\";\n// require(\"twix\");\n// require(\"moment-precise-range-plugin\");\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}