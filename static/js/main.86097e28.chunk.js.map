{"version":3,"sources":["PathCmdToBash.js","App.js","reportWebVitals.js","index.js"],"names":["PathCmdToBash","state","convertedPath","pathValue","btnCopyState","copyHandler","e","resInputElm","document","getElementById","focus","select","execCommand","setState","handleChange","value","String","raw","target","isCmdPath","test","isBashPath","includes","convertToBashPath","convertToCmdPath","split","filter","d","join","toLowerCase","pathArr","replace","toUpperCase","className","id","this","onChange","type","placeholder","readOnly","onClick","INIT","COPPIED","React","Component","ComicChapters","props","items","sort","a","b","Date","raw_time","Row","map","comic","ind","Col","xs","sm","md","lg","Card","border","style","height","padding","Header","overflow","Title","Link","href","base_site_url","_","truncate","base_site_name","length","width","Img","variant","src","cover_img","marginLeft","transform","Body","comic_url","comic_name","Subtitle","Moment","fromNow","Button","chapter_number_link","chapter_number_text","prev_chap","App","Navbar","bg","Brand","alt","Jumbotron","borderRight","reduce","acc","curr","currInd","arr","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86097e28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class PathCmdToBash extends React.Component {\r\n    state = {\r\n        convertedPath: \"\",\r\n        pathValue: \"\",\r\n        btnCopyState: \"INIT\",\r\n    };\r\n    copyHandler = (e) => {\r\n        const resInputElm = document.getElementById(\"convertedPathInput\");\r\n        // const value = resInputElm.getAttribute(\"value\");\r\n        resInputElm.focus();\r\n        resInputElm.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ btnCopyState: \"COPPIED\" });\r\n        // state: btnCopyState: INIT, COPPIED,\r\n    };\r\n    handleChange = (e) => {\r\n        const value = String.raw`${e.target.value}`;\r\n        this.setState({ pathValue: value });\r\n        // let cmdPath = String.raw`C:\\Users\\DuongNTSE\\Desktop\\vscode_projects\\book-fullstack-react\\exercise-files\\food-lookup-complete`;\r\n        // let bashPath = String.raw`/mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete`;\r\n        const cmdMatcher = /[A-Z]:\\\\((\\w+(\\-)?)?(\\\\)?)+/gi;\r\n        const bashMatcher = /\\/mnt\\/[A-Z]((\\w+(\\-)?)?(\\/)?)+/gi;\r\n        const isCmdPath = cmdMatcher.test(value);\r\n        const isBashPath = bashMatcher.test(value);\r\n\r\n        this.setState({ btnCopyState: \"INIT\" });\r\n\r\n        if (isCmdPath) {\r\n            if (!value.includes(\"/\")) {\r\n                const convertedPath = String.raw`${this.convertToBashPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else if (isBashPath) {\r\n            if (!value.includes(\"\\\\\")) {\r\n                const convertedPath = String.raw`${this.convertToCmdPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else this.setState({ convertedPath: \"\" });\r\n    };\r\n    convertToBashPath = (value) => {\r\n        // let value =\"C:\\UsersDuongNTSEDesktop\\vscode_projects\\book-fullstack-reactexercise-files\\food-lookup-complete\";\r\n        const bashPath = [\r\n            \"/mnt\",\r\n            ...String.raw`${value}`\r\n                .split(/(:|\\\\)/)\r\n                .filter((d) => ![\"\", \":\", `\\\\`].includes(d)),\r\n        ].join(\"/\");\r\n        return bashPath.toLowerCase();\r\n        // this.setState(bashPath);\r\n    };\r\n    convertToCmdPath = (value) => {\r\n        // /mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete\r\n        let pathArr = String.raw`${value}`\r\n            .replace(\"/mnt/\", \"\")\r\n            .split(/(\\/)/)\r\n            .filter((d) => ![\"\", \":\", \"/\"].includes(d));\r\n\r\n        pathArr[0] = pathArr[0].toUpperCase() + \":\";\r\n\r\n        const cmdPath = String.raw`${pathArr.join(\"\\\\\")}`;\r\n        return cmdPath;\r\n        // this.setState(cmdPath);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"ui header my-2\">\r\n                    Convert Path between CMD and BASH\r\n                </h2>\r\n                <div className=\"ui fluid action input\">\r\n                    <div className=\"ui button\">CMD/Bash Path</div>\r\n                    <input\r\n                        id=\"inputPath\"\r\n                        value={this.state.pathValue}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"C:\\Users or /mnt/c/Users\"\r\n                    />\r\n                </div>\r\n                <div className=\"ui fluid action input\">\r\n                    <input\r\n                        id=\"convertedPathInput\"\r\n                        type=\"text\"\r\n                        value={this.state.convertedPath}\r\n                        readOnly\r\n                    />\r\n                    <button\r\n                        onClick={this.copyHandler}\r\n                        className=\"ui teal right labeled icon button\"\r\n                    >\r\n                        <i className=\"copy icon\"></i>\r\n                        {\r\n                            {\r\n                                INIT: \"Copy\",\r\n                                COPPIED: \"Copied\",\r\n                            }[this.state.btnCopyState]\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <hr />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n// import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Navbar from \"react-bootstrap/Navbar\";\n// import Nav from \"react-bootstrap/Nav\";\n// import Form from \"react-bootstrap/Form\";\n// import FormControl from \"react-bootstrap/FormControl\";\nimport items from \"./api/items.json\";\nimport Moment from \"moment\";\nimport _ from \"lodash\";\n\nimport \"./App.css\";\nimport PathCmdToBash from \"./PathCmdToBash\";\n\nconst ComicChapters = (props) => {\n    // const [show, toggleShow] = useState(true);\n    items.sort((a, b) => new Date(b.raw_time) - new Date(a.raw_time));\n    return (\n        <>\n            <div className=\"container my-4\">\n                <PathCmdToBash />\n            </div>\n\n            <Row className=\"justify-content-md-start\">\n                {items.map((comic, ind) => {\n                    return (\n                        <Col xs={12} sm={6} md={4} lg={2} key={ind}>\n                            <Card\n                                border=\"info\"\n                                className=\"text-center my-1\"\n                                style={{\n                                    // width: \"14rem\",\n                                    height: \"470px\",\n                                    padding: \"0px\",\n                                }}\n                            >\n                                <Card.Header overflow=\"hidden\">\n                                    <Card.Title>\n                                        <Card.Link\n                                            className=\"text-dark\"\n                                            href={comic.base_site_url}\n                                        >\n                                            {_.truncate(comic.base_site_name, {\n                                                length: 15,\n                                            })}\n                                        </Card.Link>\n                                    </Card.Title>\n                                </Card.Header>\n                                <div\n                                    style={{\n                                        width: \"100%\",\n                                        height: \"288px\",\n                                        overflow: \"hidden\",\n                                    }}\n                                >\n                                    <Card.Img\n                                        variant=\"top\"\n                                        src={comic.cover_img}\n                                        style={{\n                                            width: \"100%\",\n                                            height: \"auto\",\n                                            // maxHeight: \"250px\",\n                                            marginLeft: \"50%\",\n                                            transform: \"translateX(-50%)\",\n                                        }}\n                                    />\n                                </div>\n\n                                <Card.Body>\n                                    <Card.Title>\n                                        <Card.Link\n                                            className=\"text-dark\"\n                                            href={comic.comic_url}\n                                        >\n                                            {_.truncate(comic.comic_name, {\n                                                length: 35,\n                                            })}\n                                        </Card.Link>\n                                    </Card.Title>\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\n                                        {Moment(comic.raw_time).fromNow()}\n                                    </Card.Subtitle>\n                                    <Button\n                                        target=\"_target\"\n                                        className={\"m-1\"}\n                                        variant=\"outline-primary\"\n                                        href={comic.chapter_number_link}\n                                    >\n                                        {comic.chapter_number_text}\n                                    </Button>\n                                    {comic.prev_chap ? (\n                                        <Button\n                                            target=\"_blank\"\n                                            variant=\"outline-primary\"\n                                            href={\n                                                comic.prev_chap\n                                                    .chapter_number_link\n                                            }\n                                        >\n                                            {\n                                                comic.prev_chap\n                                                    .chapter_number_text\n                                            }\n                                        </Button>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    );\n                })}\n            </Row>\n        </>\n    );\n};\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"headerApp\">\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand href=\"#home\">\n                        <img\n                            alt=\"\"\n                            src={process.env.PUBLIC_URL + \"/logorb.svg\"}\n                            width=\"30\"\n                            height=\"30\"\n                            className=\"d-inline-block align-top\"\n                        />{\" \"}\n                        Latest Comic Chapters\n                    </Navbar.Brand>\n                </Navbar>\n            </div>\n            <div className=\"bodyApp\">\n                <div className=\"p-4\">\n                    <ComicChapters />\n                </div>\n            </div>\n            <div className=\"footerApp\">\n                <Jumbotron>\n                    <Row>\n                        <Col\n                            style={{\n                                borderRight: \"1px dashed black\",\n                            }}\n                        >\n                            <h1>More Info: </h1>\n                            <p>\n                                I get sources from other pages as mentioned on\n                                the top of every card. So please access their\n                                pages to read more comics.\n                            </p>\n                            <p>\n                                About @copyrights, please contact:{\" \"}\n                                <b>\n                                    <i>Duongntse@gmail.com</i>\n                                </b>\n                            </p>\n                        </Col>\n                        <Col>\n                            <h1>Comic Sites:</h1>\n                            {items\n                                .reduce((acc, curr, currInd, arr) => {\n                                    if (acc.length === 0) acc.push(curr);\n                                    else {\n                                        if (\n                                            !acc\n                                                .map((a) => a.base_site_url)\n                                                .includes(curr.base_site_url)\n                                        )\n                                            acc.push(curr);\n                                    }\n                                    return acc;\n                                }, [])\n                                .map((comic, ind) => (\n                                    <Button\n                                        className={\"mx-1\"}\n                                        key={ind}\n                                        target=\"_blank\"\n                                        variant=\"outline-primary\"\n                                        href={comic.base_site_url}\n                                    >\n                                        {comic.base_site_name}\n                                    </Button>\n                                ))}\n                        </Col>\n                    </Row>\n                </Jumbotron>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./semantic-dist/semantic.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}