{"version":3,"sources":["PathCmdToBash.js","api/helper.js","Loader.js","FilterComicButtons.js","ReduxFilterComicButtons.js","redux/actions/filterByActions.js","Countdown.js","ComicCard.js","ComicChapters.js","api/apiClient.js","redux/actions/comicItemsActions.js","ReduxComicChapters.js","BetaFeature.js","Footer.js","TopNavbar.js","NoMatch.js","App.js","reportWebVitals.js","redux/reducers/comicItemsReducer.js","redux/reducers/filterByReducer.js","redux/reducers/reducer.js","index.js"],"names":["PathCmdToBash","state","convertedPath","pathValue","btnCopyState","copyHandler","e","resInputElm","document","getElementById","focus","select","execCommand","setState","handleChange","value","String","raw","target","isCmdPath","test","isBashPath","includes","convertToBashPath","convertToCmdPath","split","filter","d","join","toLowerCase","pathArr","replace","toUpperCase","className","id","this","onChange","type","placeholder","readOnly","onClick","INIT","COPPIED","React","Component","helper","chooseNewestChaptersVersion","main","duck","rock","fox","panda","filtered_versions","version","length","sort","a","b","a_latestChapter","Date","time","b_latestChapter","sortBetaItems","comics","Array","isArray","a_newestChapter","main_chapters","duck_chapters","rock_chapters","fox_chapters","panda_chapters","b_newestChapter","Loader","style","minHeight","FilterComicButtons","props","isLoading","filterBy","console","log","Col","fontSize","fontWeight","Button","variant","setFilterBy","reduce","acc","curr","push","map","website_url","retrieveComics","comic","ind","website_name","ReduxFilterComicButtons","connect","comicsByWebsite","dispatch","require","buildTimeString","timeFragmentValue","timeFragmentName","Countdown","countText","timeOfFuture","initTimer","year","month","day","hour","minute","second","moment","add","timeOfNow","diff","now","oldObsoleteConvertCountToDate","daysInMonth","yearString","monthString","dayString","hourString","minuteString","secondString","preciseDiffOfFutureAndNow","m1","format","m2","preciseDiff","runCallbackInterval","setInterval","callback","updateCounterInterval","clearInterval","trim","display","defaultProps","BootstrapTableChapters","prevChapters","scope","chapter","index","href","link","_","truncate","text","Moment","fromNow","ComicCard","cover_img","comic_name","comic_url","chapters","latestChapterUI","prevChapterUIs","data-bs-toggle","aria-expanded","aria-labelledby","slice","src","height","ComicChapters","filteredSortedComics","Row","fetchComics","xs","sm","md","lg","client","items","betaItems","loadStatus","Promise","resolve","reject","fetch","headers","Accept","then","checkStatus","parseJson","myJson","error","response","status","Error","statusText","json","loadItems","fetchComicsSuccess","ReduxComicChapters","filteredComics","cloneDeep","filterByComicSiteName","BetaFeature","Footer","loadingState","Jumbotron","borderRight","TopNavbar","Navbar","bg","Brand","alt","width","to","NoMatch","location","pathname","App","path","component","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","comicItemsReducer","action","Object","assign","filterByReducer","reducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","Index","StrictMode","ReactDOM"],"mappings":"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","file":"static/js/main.0c136041.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class PathCmdToBash extends React.Component {\r\n    state = {\r\n        convertedPath: \"\",\r\n        pathValue: \"\",\r\n        btnCopyState: \"INIT\",\r\n    };\r\n    copyHandler = (e) => {\r\n        const resInputElm = document.getElementById(\"convertedPathInput\");\r\n        // const value = resInputElm.getAttribute(\"value\");\r\n        resInputElm.focus();\r\n        resInputElm.select();\r\n        document.execCommand(\"copy\");\r\n        this.setState({ btnCopyState: \"COPPIED\" });\r\n        // state: btnCopyState: INIT, COPPIED,\r\n    };\r\n    handleChange = (e) => {\r\n        const value = String.raw`${e.target.value}`;\r\n        this.setState({ pathValue: value });\r\n        // let cmdPath = String.raw`C:\\Users\\DuongNTSE\\Desktop\\vscode_projects\\book-fullstack-react\\exercise-files\\food-lookup-complete`;\r\n        // let bashPath = String.raw`/mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete`;\r\n        const cmdMatcher = /[A-Z]:\\\\((\\w+(\\-)?)?(\\\\)?)+/gi;\r\n        const bashMatcher = /\\/mnt\\/[A-Z]((\\w+(\\-)?)?(\\/)?)+/gi;\r\n        const isCmdPath = cmdMatcher.test(value);\r\n        const isBashPath = bashMatcher.test(value);\r\n\r\n        this.setState({ btnCopyState: \"INIT\" });\r\n\r\n        if (isCmdPath) {\r\n            if (!value.includes(\"/\")) {\r\n                const convertedPath = String.raw`${this.convertToBashPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else if (isBashPath) {\r\n            if (!value.includes(\"\\\\\")) {\r\n                const convertedPath = String.raw`${this.convertToCmdPath(\r\n                    value\r\n                )}`;\r\n                this.setState({ convertedPath });\r\n            } else {\r\n                this.setState({ convertedPath: \"\" });\r\n            }\r\n        } else this.setState({ convertedPath: \"\" });\r\n    };\r\n    convertToBashPath = (value) => {\r\n        // let value =\"C:\\UsersDuongNTSEDesktop\\vscode_projects\\book-fullstack-reactexercise-files\\food-lookup-complete\";\r\n        const bashPath = [\r\n            \"/mnt\",\r\n            ...String.raw`${value}`\r\n                .split(/(:|\\\\)/)\r\n                .filter((d) => ![\"\", \":\", `\\\\`].includes(d)),\r\n        ].join(\"/\");\r\n        return bashPath.toLowerCase();\r\n        // this.setState(bashPath);\r\n    };\r\n    convertToCmdPath = (value) => {\r\n        // /mnt/c/Users/DuongNTSE/Desktop/vscode_projects/book-fullstack-react/exercise-files/food-lookup-complete\r\n        let pathArr = String.raw`${value}`\r\n            .replace(\"/mnt/\", \"\")\r\n            .split(/(\\/)/)\r\n            .filter((d) => ![\"\", \":\", \"/\"].includes(d));\r\n\r\n        pathArr[0] = pathArr[0].toUpperCase() + \":\";\r\n\r\n        const cmdPath = String.raw`${pathArr.join(\"\\\\\")}`;\r\n        return cmdPath;\r\n        // this.setState(cmdPath);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2 className=\"ui header my-2\">\r\n                    Convert Path between CMD and BASH\r\n                </h2>\r\n                <div className=\"ui fluid action input\">\r\n                    <div className=\"ui button\">CMD/Bash Path</div>\r\n                    <input\r\n                        id=\"inputPath\"\r\n                        value={this.state.pathValue}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        placeholder=\"C:\\Users or /mnt/c/Users\"\r\n                    />\r\n                </div>\r\n                <div className=\"ui fluid action input\">\r\n                    <input\r\n                        id=\"convertedPathInput\"\r\n                        type=\"text\"\r\n                        value={this.state.convertedPath}\r\n                        readOnly\r\n                    />\r\n                    <button\r\n                        onClick={this.copyHandler}\r\n                        className=\"ui teal right labeled icon button\"\r\n                    >\r\n                        <i className=\"copy icon\"></i>\r\n                        {\r\n                            {\r\n                                INIT: \"Copy\",\r\n                                COPPIED: \"Copied\",\r\n                            }[this.state.btnCopyState]\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <hr />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","export const helper = {\r\n    chooseNewestChaptersVersion: function (main, duck, rock, fox, panda) {\r\n        const filtered_versions = [main, duck, rock, fox, panda].filter(\r\n            (version) => version.length > 0\r\n        );\r\n\r\n        if (filtered_versions.length > 1) {\r\n            return filtered_versions.sort((a, b) => {\r\n                const a_latestChapter = [...a].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                const b_latestChapter = [...b].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                return (\r\n                    new Date(b_latestChapter.time) -\r\n                    new Date(a_latestChapter.time)\r\n                );\r\n            })[0];\r\n        } else {\r\n            return filtered_versions[0];\r\n        }\r\n    },\r\n    sortBetaItems: function (comics) {\r\n        if (Array.isArray(comics) && comics.length > 0) {\r\n            const cloneComics = [...comics];\r\n            return cloneComics.sort((a, b) => {\r\n                // a :main_chapters, duck_chapters,rock_chapters,fox_chapters, panda_chapters\r\n                // b :main_chapters, duck_chapters,rock_chapters,fox_chapters, panda_chapters\r\n                const a_newestChapter = this.chooseNewestChaptersVersion(\r\n                    a.main_chapters,\r\n                    a.duck_chapters,\r\n                    a.rock_chapters,\r\n                    a.fox_chapters,\r\n                    a.panda_chapters\r\n                )[0];\r\n                const b_newestChapter = this.chooseNewestChaptersVersion(\r\n                    b.main_chapters,\r\n                    b.duck_chapters,\r\n                    b.rock_chapters,\r\n                    b.fox_chapters,\r\n                    b.panda_chapters\r\n                )[0];\r\n\r\n                return (\r\n                    new Date(b_newestChapter.time) -\r\n                    new Date(a_newestChapter.time)\r\n                );\r\n            });\r\n        } else return comics;\r\n    },\r\n};\r\n\r\nexport default helper;\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n    <div className=\"html ui top attached segment\">\r\n        <div className=\"ui segment\" style={{ minHeight: 100 }}>\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui text loader\">Loading</div>\r\n            </div>\r\n            <p></p>\r\n        </div>\r\n    </div>\r\n);\r\nexport default Loader;\r\n","import React from \"react\";\r\n// import Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport const FilterComicButtons = (props) => {\r\n    const { comics, isLoading, filterBy } = props;\r\n\r\n    console.log(comics);\r\n    console.log(isLoading);\r\n    console.log(filterBy);\r\n\r\n    const retrieveComics = (comics) => {\r\n        return comics.reduce((acc, curr) => {\r\n            if (acc.length === 0) acc.push(curr);\r\n            else {\r\n                if (!acc.map((a) => a.website_url).includes(curr.website_url))\r\n                    acc.push(curr);\r\n            }\r\n            return acc;\r\n        }, []);\r\n    };\r\n\r\n    if (isLoading) return <Loader />;\r\n    return (\r\n        <Col className=\"mx-2\">\r\n            <span\r\n                style={{\r\n                    minHeight: `1rem`,\r\n                    fontSize: \"2rem\",\r\n                    fontWeight: \"bold\",\r\n                }}\r\n            >\r\n                Display:\r\n            </span>\r\n            <Button\r\n                className={`mx-1 my-1 ${filterBy === \"All\" ? \"active\" : \"\"}`}\r\n                variant=\"outline-primary\"\r\n                onClick={() => {\r\n                    props.setFilterBy(\"All\");\r\n                }}\r\n            >\r\n                All\r\n            </Button>\r\n            {retrieveComics(comics).map((comic, ind) => (\r\n                <Button\r\n                    key={ind}\r\n                    className={`mx-1 my-1 ${\r\n                        filterBy === comic.website_name ? \"active\" : \"\"\r\n                    }`}\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                        props.setFilterBy(comic.website_name);\r\n                    }}\r\n                >\r\n                    {comic.website_name}\r\n                </Button>\r\n            ))}\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default FilterComicButtons;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport FilterComicButtons from \"./FilterComicButtons\";\r\nimport { setFilterBy } from \"./redux/actions/filterByActions\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoading: state.comicsByWebsite.isLoading,\r\n        comics: state.comicsByWebsite.comics,\r\n        filterBy: state.filterBy,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setFilterBy: (value) => {\r\n            dispatch(setFilterBy(value));\r\n        },\r\n    };\r\n}\r\n\r\nexport const ReduxFilterComicButtons = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FilterComicButtons);\r\n\r\nexport default ReduxFilterComicButtons;\r\n","export const FETCH_FILTER_BY = \"FETCH_FILTER_BY\";\r\nexport function fetchFilterByRequest() {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: FETCH_FILTER_BY,\r\n        });\r\n    };\r\n}\r\n\r\nexport const SET_FILTER_BY = \"SET_FILTER_BY\";\r\nexport function setFilterBy(value) {\r\n    return function (dispatch) {\r\n        dispatch({ type: SET_FILTER_BY, filterBy: value });\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nrequire(\"twix\");\r\nrequire(\"moment-precise-range-plugin\");\r\n\r\nconst manyOrOne = (numb) => (numb > 1 ? \"s\" : \"\");\r\nconst buildTimeString = (timeFragmentValue, timeFragmentName) => `\r\n        ${\r\n            timeFragmentValue >= 0\r\n                ? `${timeFragmentValue}\r\n                  ${timeFragmentName}${manyOrOne(timeFragmentValue)}`\r\n                : \"\"\r\n        }\r\n        `;\r\n\r\nexport class Countdown extends Component {\r\n    state = {\r\n        // count: 0,\r\n        countText: \"\", //\r\n        timeOfFuture: null, // default 10 minutes\r\n        // timeOfNow: null, // default 10 minutes\r\n    };\r\n\r\n    initTimer = ({ year, month, day, hour, minute, second }) => {\r\n        const timeOfFuture = moment()\r\n            .add(year, \"year\")\r\n            .add(month, \"month\")\r\n            .add(day, \"day\")\r\n            .add(hour, \"hour\")\r\n            .add(minute, \"minute\")\r\n            .add(second, \"second\");\r\n\r\n        const timeOfNow = moment();\r\n\r\n        const diff = new Date(timeOfFuture) - Date.now();\r\n\r\n        return { timeOfFuture, timeOfNow, diff };\r\n    };\r\n\r\n    oldObsoleteConvertCountToDate = () => {\r\n        const { timeOfFuture } = this.state;\r\n\r\n        let second = timeOfFuture.second() - moment().second();\r\n        let minute = timeOfFuture.minute() - moment().minute();\r\n        let hour = timeOfFuture.hour() - moment().hour();\r\n        let day = timeOfFuture.day() - moment().day();\r\n        let month = timeOfFuture.month() - moment().month();\r\n        let year = timeOfFuture.year() - moment().year();\r\n\r\n        if (second < 0) {\r\n            second = second + 60;\r\n            minute = minute - 1;\r\n        }\r\n\r\n        if (minute < 0 && hour > 0) {\r\n            minute = minute + 60;\r\n            hour = hour - 1;\r\n        }\r\n        if (hour < 0 && day > 0) {\r\n            hour = hour + 24;\r\n            day = day - 1;\r\n        }\r\n        if (day < 0 && month > 0) {\r\n            day = day + timeOfFuture.daysInMonth();\r\n            month = month - 1;\r\n        }\r\n        if (month < 0 && year > 0) {\r\n            month = month + 1;\r\n            year = year - 1;\r\n        }\r\n\r\n        const yearString =\r\n            this.props.year && this.props.year >= 0\r\n                ? buildTimeString(year, \"year\")\r\n                : \"\";\r\n        const monthString =\r\n            this.props.month && this.props.month >= 0\r\n                ? buildTimeString(month, \"month\")\r\n                : \"\";\r\n        const dayString =\r\n            this.props.day && this.props.day >= 0\r\n                ? buildTimeString(day, \"day\")\r\n                : \"\";\r\n        const hourString =\r\n            this.props.hour && this.props.hour >= 0\r\n                ? buildTimeString(hour, \"hour\")\r\n                : \"\";\r\n        const minuteString =\r\n            this.props.minute && this.props.minute >= 0\r\n                ? buildTimeString(minute, \"minute\")\r\n                : \"\";\r\n        const secondString = buildTimeString(second, \"second\");\r\n\r\n        const countText = `${yearString} ${monthString} ${dayString}  ${hourString}  ${minuteString}  ${secondString}`;\r\n\r\n        return countText;\r\n    };\r\n\r\n    preciseDiffOfFutureAndNow = () => {\r\n        const { timeOfFuture } = this.state;\r\n\r\n        var m1 = timeOfFuture.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        var m2 = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n        var diff = moment.preciseDiff(m1, m2);\r\n        // console.log(\r\n        //     moment(\"1982-01-25T09:30\").twix(\"1982-01-25T13:30\").format()\r\n        // );\r\n        return diff;\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { timeOfFuture, diff } = this.initTimer(this.props);\r\n        this.setState({ timeOfFuture });\r\n\r\n        // countdown every any seconds, minutes, hours, or days\r\n        this.runCallbackInterval = setInterval(() => {\r\n            this.props.callback();\r\n            const { timeOfFuture } = this.initTimer(this.props);\r\n            this.setState({ timeOfFuture });\r\n        }, diff);\r\n\r\n        // update every 1 second\r\n        this.updateCounterInterval = setInterval(() => {\r\n            const countText = this.preciseDiffOfFutureAndNow();\r\n            this.setState({ countText });\r\n        }, 1000);\r\n    }\r\n    componentDidUpdate() {\r\n        //\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.runCallbackInterval);\r\n        clearInterval(this.updateCounterInterval);\r\n    }\r\n\r\n    render() {\r\n        const { countText } = this.state;\r\n        if (countText.trim().length === 0) return \"\";\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                }}\r\n            >\r\n                <h6>\r\n                    Data will be updated in{\" \"}\r\n                    <span\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"1.5em\",\r\n                        }}\r\n                    >\r\n                        {countText}\r\n                    </span>\r\n                </h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCountdown.propTypes = {\r\n    callback: PropTypes.func,\r\n};\r\n\r\nCountdown.defaultProps = {\r\n    year: 0,\r\n    month: 0,\r\n    day: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n    second: 0,\r\n};\r\n\r\nexport default Countdown;\r\n","import React from \"react\";\r\nimport Moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nconst BootstrapTableChapters = ({ prevChapters }) => (\r\n    <table className=\"table table-light table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">\r\n                    <div className=\"item content text-center\">Chapter</div>\r\n                </th>\r\n                <th scope=\"col\">\r\n                    <div className=\"item content text-center\">Date</div>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {prevChapters.map((chapter, index) => (\r\n                <tr key={index}>\r\n                    <td>\r\n                        <a className=\"chapterNumberLink\" href={chapter.link}>\r\n                            {_.truncate(chapter.text, {\r\n                                length: 20,\r\n                            })}\r\n                        </a>\r\n                    </td>\r\n                    <td>\r\n                        {chapter.time ? (\r\n                            <span className=\"\">\r\n                                {/* <div className=\"item content text-center\"> </div> */}\r\n                                {Moment(chapter.time).fromNow()}\r\n                            </span>\r\n                        ) : (\r\n                            \"not available\"\r\n                        )}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\n/*\r\n<ComicCard\r\n    website_name={website_name}\r\n    website_url={website_url}\r\n    cover_img={cover_img}\r\n    comic_name={comic_name}\r\n    comic_url={comic_url}\r\n    main_chapters,\r\n    duck_chapters,\r\n    rock_chapters,\r\n    fox_chapters,\r\n    panda_chapters,\r\n/>;\r\n*/\r\nexport const ComicCard = (props) => {\r\n    const {\r\n        website_name,\r\n        website_url,\r\n        cover_img,\r\n        comic_name,\r\n        comic_url,\r\n        main_chapters,\r\n        duck_chapters,\r\n        rock_chapters,\r\n        fox_chapters,\r\n        panda_chapters,\r\n    } = props;\r\n\r\n    const chooseNewestChaptersVersion = (main, duck, rock, fox, panda) => {\r\n        const filtered_versions = [main, duck, rock, fox, panda].filter(\r\n            (version) => version.length > 0\r\n        );\r\n\r\n        if (filtered_versions.length > 1) {\r\n            return filtered_versions.sort((a, b) => {\r\n                const a_latestChapter = [...a].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                const b_latestChapter = [...b].sort(\r\n                    (a, b) => new Date(b.time) - new Date(a.time)\r\n                )[0];\r\n                return (\r\n                    new Date(b_latestChapter.time) -\r\n                    new Date(a_latestChapter.time)\r\n                );\r\n            })[0];\r\n        } else {\r\n            return filtered_versions[0];\r\n        }\r\n    };\r\n\r\n    const chapters = chooseNewestChaptersVersion(\r\n        main_chapters,\r\n        duck_chapters,\r\n        rock_chapters,\r\n        fox_chapters,\r\n        panda_chapters\r\n    );\r\n\r\n    const latestChapterUI = (\r\n        <div className=\"text\">\r\n            <div className=\"extra content\">\r\n                <span className=\"right floated mr-1\">\r\n                    {chapters[0].time ? Moment(chapters[0].time).fromNow() : \"\"}\r\n                </span>\r\n                <span>\r\n                    <a\r\n                        className=\"m-1 chapterNumberLink\"\r\n                        href={chapters[0].link}\r\n                    >\r\n                        {_.truncate(chapters[0].text, {\r\n                            length: 20,\r\n                        })}\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const prevChapterUIs = (\r\n        <div className=\"dropdown d-grid gap-2\">\r\n            <button\r\n                className=\"btn btn-secondary dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Previous Chapters\r\n            </button>\r\n            <ul\r\n                className=\"dropdown-menu w-100\"\r\n                aria-labelledby=\"dropdownMenuButton\"\r\n            >\r\n                <BootstrapTableChapters prevChapters={chapters.slice(1)} />\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"ui link cards my-1\">\r\n            <div className=\"card\">\r\n                <div className=\"image\">\r\n                    <img src={cover_img} style={{ height: \"410px\" }} />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"header\">\r\n                        <a className=\"m-1\" href={comic_url}>\r\n                            {comic_name}\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        <a href={website_url}>\r\n                            {_.truncate(website_name, {\r\n                                length: 15,\r\n                            })}\r\n                        </a>\r\n                    </div>\r\n                    {/* <div className=\"description\">\r\n                            Matthew is an interior designer living in New York.\r\n                        </div> */}\r\n                </div>\r\n                {latestChapterUI}\r\n                <br />\r\n                {prevChapterUIs}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComicCard;\r\n","import React from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport ReduxFilterComicButtons from \"./ReduxFilterComicButtons\";\r\nimport Countdown from \"./Countdown\";\r\nimport Loader from \"./Loader\";\r\nimport ComicCard from \"./ComicCard\";\r\n\r\nexport const ComicChapters = (props) => {\r\n    const { isLoading, filteredSortedComics } = props;\r\n    if (isLoading)\r\n        return (\r\n            <div className=\"container my-4\">\r\n                <Loader />\r\n            </div>\r\n        );\r\n    return (\r\n        <>\r\n            <div className=\"container my-4\">\r\n                <Row className=\"text-center py-4\">\r\n                    <div className=\"mt-4 ml-4\">\r\n                        <Countdown\r\n                            hour={0}\r\n                            minute={1}\r\n                            second={30}\r\n                            callback={props.fetchComics}\r\n                        />\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"text-center py-4\">\r\n                    <ReduxFilterComicButtons />\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-md-start\">\r\n                    {filteredSortedComics.map((comic, ind) => {\r\n                        return (\r\n                            <Col xs={12} sm={6} md={4} lg={3} key={ind}>\r\n                                <ComicCard {...comic} />\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicChapters;\r\n","/* eslint-disable prefer-template */\r\n/* eslint-disable import/prefer-default-export */\r\nimport fetch from \"isomorphic-fetch\";\r\nclass Client {\r\n    constructor() {\r\n        this.items = [];\r\n        this.betaItems = [];\r\n        this.loadStatus = \"INIT\"; // INIT, IN_PROGRESS, COMPLETED\r\n    }\r\n\r\n    loadItems() {\r\n        this.loadStatus = \"IN_PROGRESS\";\r\n        console.log(\"Called loadItems()\");\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                fetch(\"items.json\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Accept: \"application/json\",\r\n                    },\r\n                })\r\n                    .then(this.checkStatus)\r\n                    .then(this.parseJson)\r\n                    .then((myJson) => {\r\n                        this.loadStatus = \"COMPLETED\";\r\n                        this.betaItems = myJson;\r\n                        debugger;\r\n                        resolve(myJson);\r\n                    });\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    checkStatus(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            const error = new Error(`HTTP Error ${response.statusText}`);\r\n            error.status = response.statusText;\r\n            error.response = response;\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    parseJson(response) {\r\n        return response.json();\r\n    }\r\n}\r\n\r\nexport const client = new Client();\r\n","import { client } from \"../../api/apiClient\";\r\n\r\nexport const FETCH_COMICS_REQUEST = \"FETCH_COMICS_REQUEST\";\r\nfunction fetchComicsRequest() {\r\n    return { type: FETCH_COMICS_REQUEST };\r\n}\r\n\r\nexport const FETCH_COMICS_SUCCESS = \"FETCH_COMICS_SUCCESS\";\r\nfunction fetchComicsSuccess(comics) {\r\n    return { type: FETCH_COMICS_SUCCESS, comics };\r\n}\r\n\r\nexport function fetchComics() {\r\n    return function (dispatch) {\r\n        // 1: fetch comics request\r\n        dispatch(fetchComicsRequest());\r\n        // 2: fetch comics success\r\n        client.loadItems().then((comics) => {\r\n            dispatch(fetchComicsSuccess(comics));\r\n        });\r\n    };\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { helper } from \"./api/helper\";\r\nimport ComicChapters from \"./ComicChapters\";\r\nimport { fetchComics } from \"./redux/actions/comicItemsActions\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst filterByComicSiteName = (filterBy, comics) => {\r\n    if (filterBy === \"All\") {\r\n        const filteredComics = cloneDeep(comics);\r\n        return filteredComics;\r\n    } else {\r\n        const filteredComics = cloneDeep(comics).filter(\r\n            (comic) => comic.website_name === filterBy\r\n        );\r\n        return filteredComics;\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const { filterBy, comicsByWebsite } = state;\r\n    const filteredComics = filterByComicSiteName(\r\n        filterBy,\r\n        comicsByWebsite.comics\r\n    );\r\n    const filteredSortedComics = helper.sortBetaItems(filteredComics);\r\n    return {\r\n        isLoading: state.isLoading,\r\n        comics: state.comics,\r\n        filteredSortedComics,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchComics: () => {\r\n            dispatch(fetchComics());\r\n        },\r\n    };\r\n}\r\n\r\nexport const ReduxComicChapters = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ComicChapters);\r\n\r\nexport default ReduxComicChapters;\r\n","export const BetaFeature = () => (\r\n    <div className=\"container-fluid\">\r\n        <h1>Beta Feature</h1>\r\n    </div>\r\n);\r\nexport default BetaFeature;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { client } from \"./api/apiClient\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport class Footer extends Component {\r\n    state = {\r\n        items: [],\r\n        loadingState: \"LOADING\",\r\n    };\r\n\r\n    loadItems = () => {\r\n        client.loadItems().then((items) => {\r\n            this.setState({ items, loadingState: \"FINISHED\" });\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loadingState: \"LOADING\",\r\n        });\r\n        this.loadItems();\r\n    }\r\n\r\n    render() {\r\n        const { items, loadingState } = this.state;\r\n        if (loadingState === \"LOADING\")\r\n            return (\r\n                <div className=\"container my-4\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <Jumbotron>\r\n                <Row>\r\n                    <Col\r\n                        style={{\r\n                            borderRight: \"1px dashed black\",\r\n                        }}\r\n                    >\r\n                        <h1>More Info: </h1>\r\n                        <p>\r\n                            I get sources from other pages as mentioned on the\r\n                            top of every card. So please access their pages to\r\n                            read more comics.\r\n                        </p>\r\n                        <p>\r\n                            About @copyrights, please contact:{\" \"}\r\n                            <b>\r\n                                <i>Duongntse@gmail.com</i>\r\n                            </b>\r\n                        </p>\r\n                    </Col>\r\n                    <Col>\r\n                        <h1>Comic Sites:</h1>\r\n                        {items\r\n                            .reduce((acc, curr) => {\r\n                                if (acc.length === 0) acc.push(curr);\r\n                                else {\r\n                                    if (\r\n                                        !acc\r\n                                            .map((a) => a.website_url)\r\n                                            .includes(curr.website_url)\r\n                                    )\r\n                                        acc.push(curr);\r\n                                }\r\n                                return acc;\r\n                            }, [])\r\n                            .map((comic, ind) => (\r\n                                <Button\r\n                                    className={\"mx-1\"}\r\n                                    key={ind}\r\n                                    target=\"_blank\"\r\n                                    variant=\"outline-primary\"\r\n                                    href={comic.website_url}\r\n                                >\r\n                                    {comic.website_name}\r\n                                </Button>\r\n                            ))}\r\n                    </Col>\r\n                </Row>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class TopNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src=\"/harrygold_logo_ver4.svg\"\r\n                        width=\"40\"\r\n                        height=\"40\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{\" \"}\r\n                    {/*  */}\r\n                </Navbar.Brand>\r\n                <Link className=\"ui item\" to=\"/comics_alpha\">\r\n                    <Button className={\"mx-1\"} variant=\"outline-light\">\r\n                        {\"Alpha Comics\"}\r\n                    </Button>\r\n                </Link>\r\n                <Link className=\"ui item\" to=\"/beta_feature\">\r\n                    <Button className={\"mx-1\"} variant=\"outline-light\">\r\n                        {\"Beta Feature\"}\r\n                    </Button>\r\n                </Link>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavbar;\r\n","export const NoMatch = ({ location }) => (\r\n    <div className=\"ui inverted red raised very padded text container segment\">\r\n        <strong>Error!</strong> No route found matching:\r\n        <div className=\"ui inverted black segment\">\r\n            <code>{location.pathname}</code>\r\n        </div>\r\n    </div>\r\n);\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n// import _ from \"lodash\";\nimport \"./App.css\";\n\nimport PathCmdToBash from \"./PathCmdToBash\";\nimport ReduxComicChapters from \"./ReduxComicChapters\";\nimport BetaFeature from \"./BetaFeature\";\nimport Footer from \"./Footer\";\nimport TopNavbar from \"./TopNavbar\";\nimport NoMatch from \"./NoMatch\";\n\nexport class App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"headerApp\">\n                    <TopNavbar />\n                </div>\n\n                <div className=\"bodyApp\">\n                    <div className=\"p-4\">\n                        <div className=\"container my-4\">\n                            <PathCmdToBash />\n                        </div>\n                        <div className=\"container my-4\">\n                            <Switch>\n                                <Route\n                                    path=\"/comics_alpha\"\n                                    component={ReduxComicChapters}\n                                />\n                                <Route\n                                    path=\"/beta_feature\"\n                                    component={BetaFeature}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => (\n                                        <Redirect to=\"/comics_alpha\" />\n                                    )}\n                                />\n                                <Route component={NoMatch} />\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footerApp\">\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    comics: [],\r\n    isLoading: false,\r\n};\r\n\r\nexport function comicItemsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"FETCH_COMICS_REQUEST\": {\r\n            return Object.assign({}, state, { isLoading: true });\r\n        }\r\n        case \"FETCH_COMICS_SUCCESS\": {\r\n            return Object.assign({}, state, {\r\n                comics: action.comics,\r\n                isLoading: false,\r\n            });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default comicItemsReducer;\r\n","const initialState = \"All\";\r\n\r\nexport function filterByReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"FETCH_FILTER_BY\":\r\n            return state;\r\n\r\n        case \"SET_FILTER_BY\":\r\n            return action.filterBy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filterByReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport comicItemsReducer from \"./comicItemsReducer\";\r\nimport filterByReducer from \"./filterByReducer\";\r\n\r\nexport const reducer = combineReducers({\r\n    filterBy: filterByReducer,\r\n    comicsByWebsite: comicItemsReducer,\r\n});\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./semantic-dist/semantic.min.css\";\n\n// Router\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\n\n// Redux + thunk\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"./redux/reducers/reducer\";\n// action\nimport { fetchComics } from \"./redux/actions/comicItemsActions\";\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nclass Index extends React.Component {\n    componentDidMount() {\n        store.dispatch(fetchComics());\n        console.log(\"Called store.dispatch(fetchComics());\");\n    }\n\n    render() {\n        return (\n            <React.StrictMode>\n                <Provider store={store}>\n                    {/* <Router> */}\n                    <HashRouter>\n                        <App />\n                    </HashRouter>\n                    {/* </Router> */}\n                </Provider>\n            </React.StrictMode>\n        );\n    }\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}